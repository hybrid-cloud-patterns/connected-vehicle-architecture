---
# Source: bobbycar-core-apps/templates/cacheService-secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: cache-service-secret
stringData:
  application.properties: |-
    com.redhat.bobbycar.camelk.dg.car.cacheName: cars
    com.redhat.bobbycar.camelk.dg.zone.cacheName: zones
    com.redhat.bobbycar.camelk.dg.host: bobbycar-dg
    com.redhat.bobbycar.camelk.dg.password: replaceme
    com.redhat.bobbycar.camelk.dg.user: replaceme
type: Opaque
---
# Source: bobbycar-core-apps/templates/kafka2datagrid-secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: kafka2datagrid
stringData:
  application.properties: |-
    com.redhat.bobbycar.camelk.dg.car.snapshot.cacheName: carsnapshots
    com.redhat.bobbycar.camelk.dg.car.cacheName: cars
    com.redhat.bobbycar.camelk.dg.zone.cacheName: zones
    com.redhat.bobbycar.camelk.dg.refresh.interval: 10000
    com.redhat.bobbycar.camelk.dg.host: bobbycar-dg
    com.redhat.bobbycar.camelk.dg.password: replaceme
    com.redhat.bobbycar.camelk.dg.user: replaceme
    com.redhat.bobbycar.camelk.kafka.brokers: bobbycar-cluster-kafka-bootstrap:9092
    com.redhat.bobbycar.camelk.kafka.topic: bobbycar-gps
    com.redhat.bobbycar.camelk.mqtt.brokerUrl: tcp://bobbycar-amq-mqtt-all-0-svc:61616
    com.redhat.bobbycar.camelk.mqtt.topic: bobbycar/zonechange
    com.redhat.bobbycar.camelk.dg.ocp.api: test.cluster.domain.com
    com.redhat.bobbycar.camelk.dg.namespace: test
type: Opaque
---
# Source: bobbycar-core-apps/templates/mqtt2kafka-secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: mqtt2kafka
stringData:
  application.properties: |-
    com.redhat.bobbycar.camelk.kafka.brokers: bobbycar-cluster-kafka-bootstrap:9092
    com.redhat.bobbycar.camelk.kafka.topic: bobbycar-metrics
    com.redhat.bobbycar.camelk.kafka.topicZoneChange: bobbycar-zonechange
    com.redhat.bobbycar.camelk.mqtt.brokerUrl: tcp://bobbycar-amq-mqtt-all-0-svc:61616
    com.redhat.bobbycar.camelk.mqtt.topic: bobbycar/enginemetrics
    com.redhat.bobbycar.camelk.mqtt.topicZoneChange: bobbycar/zonechange
type: Opaque
---
# Source: bobbycar-core-apps/templates/car-simulator-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: car-simulator
  name: car-simulator-config
data:
  CAR_ID: replaceme
  DA-BadVilbel.gpx: >
    <?xml version="1.0" encoding="UTF-8" standalone="no" ?>

    <gpx xmlns="http://www.topografix.com/GPX/1/1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" creator="Kurviger.de"
    version="1.1" xmlns:gh="https://kurviger.de/public/schema/gpx/1.1">

    <metadata>

    <name>DA-BadVilbel</name>

    <copyright author="OpenStreetMap contributors"/>

    <link href="https://kurviger.de">

    <text>Kurviger.de GPX</text>

    </link>

    <time>2020-05-14T07:37:07Z</time>

    </metadata>

    <trk><name>DA-BadVilbel</name><trkseg>

    <trkpt lat="49.953052"
    lon="8.674811"><ele>134.2</ele><time>2020-05-14T07:37:07Z</time></trkpt>

    <trkpt lat="49.954011"
    lon="8.6745"><ele>132.4</ele><time>2020-05-14T07:37:29Z</time></trkpt>

    <trkpt lat="49.953962"
    lon="8.673464"><ele>131.2</ele><time>2020-05-14T07:37:45Z</time></trkpt>

    <trkpt lat="49.953967"
    lon="8.673231"><ele>130.0</ele><time>2020-05-14T07:37:48Z</time></trkpt>

    <trkpt lat="49.957077"
    lon="8.673754"><ele>131.0</ele><time>2020-05-14T07:38:17Z</time></trkpt>

    <trkpt lat="49.962585"
    lon="8.674741"><ele>129.8</ele><time>2020-05-14T07:39:07Z</time></trkpt>

    <trkpt lat="49.962877"
    lon="8.674964"><ele>129.8</ele><time>2020-05-14T07:39:09Z</time></trkpt>

    <trkpt lat="49.962939"
    lon="8.67508"><ele>130.6</ele><time>2020-05-14T07:39:09Z</time></trkpt>

    <trkpt lat="49.962974"
    lon="8.675234"><ele>130.6</ele><time>2020-05-14T07:39:10Z</time></trkpt>

    <trkpt lat="49.963098"
    lon="8.67611"><ele>131.4</ele><time>2020-05-14T07:39:13Z</time></trkpt>

    <trkpt lat="49.963569"
    lon="8.683344"><ele>140.0</ele><time>2020-05-14T07:39:36Z</time></trkpt>

    <trkpt lat="49.963596"
    lon="8.68421"><ele>142.0</ele><time>2020-05-14T07:39:39Z</time></trkpt>

    <trkpt lat="49.963666"
    lon="8.685549"><ele>143.4</ele><time>2020-05-14T07:39:43Z</time></trkpt>

    <trkpt lat="49.963697"
    lon="8.685845"><ele>144.0</ele><time>2020-05-14T07:39:44Z</time></trkpt>

    <trkpt lat="49.963761"
    lon="8.686201"><ele>144.0</ele><time>2020-05-14T07:39:45Z</time></trkpt>

    <trkpt lat="49.963845"
    lon="8.686532"><ele>144.0</ele><time>2020-05-14T07:39:46Z</time></trkpt>

    <trkpt lat="49.963962"
    lon="8.686881"><ele>145.6</ele><time>2020-05-14T07:39:48Z</time></trkpt>

    <trkpt lat="49.964082"
    lon="8.687169"><ele>145.6</ele><time>2020-05-14T07:39:49Z</time></trkpt>

    <trkpt lat="49.964275"
    lon="8.687531"><ele>148.2</ele><time>2020-05-14T07:39:50Z</time></trkpt>

    <trkpt lat="49.964429"
    lon="8.687761"><ele>148.2</ele><time>2020-05-14T07:39:51Z</time></trkpt>

    <trkpt lat="49.964676"
    lon="8.688066"><ele>148.2</ele><time>2020-05-14T07:39:53Z</time></trkpt>

    <trkpt lat="49.964969"
    lon="8.68836"><ele>150.6</ele><time>2020-05-14T07:39:55Z</time></trkpt>

    <trkpt lat="49.965259"
    lon="8.688584"><ele>151.0</ele><time>2020-05-14T07:39:56Z</time></trkpt>

    <trkpt lat="49.96556"
    lon="8.688748"><ele>151.0</ele><time>2020-05-14T07:39:58Z</time></trkpt>

    <trkpt lat="49.965775"
    lon="8.688836"><ele>151.0</ele><time>2020-05-14T07:39:59Z</time></trkpt>

    <trkpt lat="49.966448"
    lon="8.689017"><ele>150.4</ele><time>2020-05-14T07:40:02Z</time></trkpt>

    <trkpt lat="49.967602"
    lon="8.689405"><ele>157.2</ele><time>2020-05-14T07:40:08Z</time></trkpt>

    <trkpt lat="49.967905"
    lon="8.689514"><ele>157.2</ele><time>2020-05-14T07:40:10Z</time></trkpt>

    <trkpt lat="49.968854"
    lon="8.689916"><ele>159.0</ele><time>2020-05-14T07:40:15Z</time></trkpt>

    <trkpt lat="49.96988"
    lon="8.690472"><ele>161.2</ele><time>2020-05-14T07:40:20Z</time></trkpt>

    <trkpt lat="49.970625"
    lon="8.690959"><ele>162.4</ele><time>2020-05-14T07:40:24Z</time></trkpt>

    <trkpt lat="49.970992"
    lon="8.691227"><ele>160.0</ele><time>2020-05-14T07:40:26Z</time></trkpt>

    <trkpt lat="49.971921"
    lon="8.691962"><ele>161.2</ele><time>2020-05-14T07:40:32Z</time></trkpt>

    <trkpt lat="49.974764"
    lon="8.694582"><ele>164.8</ele><time>2020-05-14T07:40:48Z</time></trkpt>

    <trkpt lat="49.975418"
    lon="8.695116"><ele>172.2</ele><time>2020-05-14T07:40:52Z</time></trkpt>

    <trkpt lat="49.97583"
    lon="8.695415"><ele>172.2</ele><time>2020-05-14T07:40:54Z</time></trkpt>

    <trkpt lat="49.976291"
    lon="8.695709"><ele>177.6</ele><time>2020-05-14T07:40:57Z</time></trkpt>

    <trkpt lat="49.977184"
    lon="8.696165"><ele>178.8</ele><time>2020-05-14T07:41:01Z</time></trkpt>

    <trkpt lat="49.977719"
    lon="8.696378"><ele>178.8</ele><time>2020-05-14T07:41:04Z</time></trkpt>

    <trkpt lat="49.97826"
    lon="8.696555"><ele>178.8</ele><time>2020-05-14T07:41:07Z</time></trkpt>

    <trkpt lat="49.979224"
    lon="8.696762"><ele>186.2</ele><time>2020-05-14T07:41:12Z</time></trkpt>

    <trkpt lat="49.979792"
    lon="8.696812"><ele>186.2</ele><time>2020-05-14T07:41:15Z</time></trkpt>

    <trkpt lat="49.980309"
    lon="8.696811"><ele>188.0</ele><time>2020-05-14T07:41:17Z</time></trkpt>

    <trkpt lat="49.980943"
    lon="8.696776"><ele>189.6</ele><time>2020-05-14T07:41:21Z</time></trkpt>

    <trkpt lat="49.981864"
    lon="8.696608"><ele>189.6</ele><time>2020-05-14T07:41:25Z</time></trkpt>

    <trkpt lat="49.982382"
    lon="8.696461"><ele>189.6</ele><time>2020-05-14T07:41:28Z</time></trkpt>

    <trkpt lat="49.98319"
    lon="8.696153"><ele>189.0</ele><time>2020-05-14T07:41:32Z</time></trkpt>

    <trkpt lat="49.98409"
    lon="8.695685"><ele>189.4</ele><time>2020-05-14T07:41:37Z</time></trkpt>

    <trkpt lat="49.985273"
    lon="8.694874"><ele>185.4</ele><time>2020-05-14T07:41:43Z</time></trkpt>

    <trkpt lat="49.986529"
    lon="8.693845"><ele>179.4</ele><time>2020-05-14T07:41:50Z</time></trkpt>

    <trkpt lat="49.987791"
    lon="8.692719"><ele>167.2</ele><time>2020-05-14T07:41:58Z</time></trkpt>

    <trkpt lat="49.989946"
    lon="8.690847"><ele>160.8</ele><time>2020-05-14T07:42:10Z</time></trkpt>

    <trkpt lat="49.99089"
    lon="8.690124"><ele>164.2</ele><time>2020-05-14T07:42:15Z</time></trkpt>

    <trkpt lat="49.991533"
    lon="8.68974"><ele>163.2</ele><time>2020-05-14T07:42:19Z</time></trkpt>

    <trkpt lat="49.992171"
    lon="8.689407"><ele>165.6</ele><time>2020-05-14T07:42:22Z</time></trkpt>

    <trkpt lat="49.992733"
    lon="8.689162"><ele>166.4</ele><time>2020-05-14T07:42:25Z</time></trkpt>

    <trkpt lat="49.993413"
    lon="8.688935"><ele>167.2</ele><time>2020-05-14T07:42:29Z</time></trkpt>

    <trkpt lat="49.993644"
    lon="8.688874"><ele>167.2</ele><time>2020-05-14T07:42:30Z</time></trkpt>

    <trkpt lat="49.994624"
    lon="8.688704"><ele>166.2</ele><time>2020-05-14T07:42:35Z</time></trkpt>

    <trkpt lat="49.995387"
    lon="8.688675"><ele>165.0</ele><time>2020-05-14T07:42:39Z</time></trkpt>

    <trkpt lat="49.996035"
    lon="8.688707"><ele>164.4</ele><time>2020-05-14T07:42:42Z</time></trkpt>

    <trkpt lat="49.996786"
    lon="8.688826"><ele>164.6</ele><time>2020-05-14T07:42:46Z</time></trkpt>

    <trkpt lat="49.997773"
    lon="8.689113"><ele>167.2</ele><time>2020-05-14T07:42:51Z</time></trkpt>

    <trkpt lat="49.998217"
    lon="8.689292"><ele>168.2</ele><time>2020-05-14T07:42:53Z</time></trkpt>

    <trkpt lat="49.99902"
    lon="8.689688"><ele>169.4</ele><time>2020-05-14T07:42:57Z</time></trkpt>

    <trkpt lat="49.999917"
    lon="8.690268"><ele>171.0</ele><time>2020-05-14T07:43:02Z</time></trkpt>

    <trkpt lat="50.000638"
    lon="8.690844"><ele>170.0</ele><time>2020-05-14T07:43:06Z</time></trkpt>

    <trkpt lat="50.001104"
    lon="8.691254"><ele>169.2</ele><time>2020-05-14T07:43:09Z</time></trkpt>

    <trkpt lat="50.002025"
    lon="8.692164"><ele>168.4</ele><time>2020-05-14T07:43:14Z</time></trkpt>

    <trkpt lat="50.002531"
    lon="8.692707"><ele>167.8</ele><time>2020-05-14T07:43:17Z</time></trkpt>

    <trkpt lat="50.003078"
    lon="8.69334"><ele>168.4</ele><time>2020-05-14T07:43:21Z</time></trkpt>

    <trkpt lat="50.004529"
    lon="8.695113"><ele>160.2</ele><time>2020-05-14T07:43:30Z</time></trkpt>

    <trkpt lat="50.006343"
    lon="8.697452"><ele>156.4</ele><time>2020-05-14T07:43:42Z</time></trkpt>

    <trkpt lat="50.00728"
    lon="8.69863"><ele>156.8</ele><time>2020-05-14T07:43:48Z</time></trkpt>

    <trkpt lat="50.008586"
    lon="8.700191"><ele>150.4</ele><time>2020-05-14T07:43:56Z</time></trkpt>

    <trkpt lat="50.010364"
    lon="8.702124"><ele>149.8</ele><time>2020-05-14T07:44:07Z</time></trkpt>

    <trkpt lat="50.01157"
    lon="8.703308"><ele>151.4</ele><time>2020-05-14T07:44:14Z</time></trkpt>

    <trkpt lat="50.012864"
    lon="8.704454"><ele>152.0</ele><time>2020-05-14T07:44:22Z</time></trkpt>

    <trkpt lat="50.01341"
    lon="8.7049"><ele>151.2</ele><time>2020-05-14T07:44:25Z</time></trkpt>

    <trkpt lat="50.014382"
    lon="8.705642"><ele>152.4</ele><time>2020-05-14T07:44:30Z</time></trkpt>

    <trkpt lat="50.01525"
    lon="8.706259"><ele>151.8</ele><time>2020-05-14T07:44:35Z</time></trkpt>

    <trkpt lat="50.016116"
    lon="8.706837"><ele>150.6</ele><time>2020-05-14T07:44:40Z</time></trkpt>

    <trkpt lat="50.017037"
    lon="8.707393"><ele>149.8</ele><time>2020-05-14T07:44:45Z</time></trkpt>

    <trkpt lat="50.017985"
    lon="8.707928"><ele>150.0</ele><time>2020-05-14T07:44:50Z</time></trkpt>

    <trkpt lat="50.01907"
    lon="8.708476"><ele>149.0</ele><time>2020-05-14T07:44:55Z</time></trkpt>

    <trkpt lat="50.020413"
    lon="8.709067"><ele>147.6</ele><time>2020-05-14T07:45:02Z</time></trkpt>

    <trkpt lat="50.021063"
    lon="8.709322"><ele>147.6</ele><time>2020-05-14T07:45:06Z</time></trkpt>

    <trkpt lat="50.022338"
    lon="8.709773"><ele>147.2</ele><time>2020-05-14T07:45:12Z</time></trkpt>

    <trkpt lat="50.023991"
    lon="8.710293"><ele>144.4</ele><time>2020-05-14T07:45:21Z</time></trkpt>

    <trkpt lat="50.025059"
    lon="8.710596"><ele>143.2</ele><time>2020-05-14T07:45:26Z</time></trkpt>

    <trkpt lat="50.030441"
    lon="8.711913"><ele>140.6</ele><time>2020-05-14T07:45:53Z</time></trkpt>

    <trkpt lat="50.034198"
    lon="8.712859"><ele>144.8</ele><time>2020-05-14T07:46:13Z</time></trkpt>

    <trkpt lat="50.035347"
    lon="8.713221"><ele>145.4</ele><time>2020-05-14T07:46:18Z</time></trkpt>

    <trkpt lat="50.036393"
    lon="8.713612"><ele>142.8</ele><time>2020-05-14T07:46:24Z</time></trkpt>

    <trkpt lat="50.037286"
    lon="8.713995"><ele>142.0</ele><time>2020-05-14T07:46:28Z</time></trkpt>

    <trkpt lat="50.037876"
    lon="8.714278"><ele>142.4</ele><time>2020-05-14T07:46:32Z</time></trkpt>

    <trkpt lat="50.038927"
    lon="8.714863"><ele>140.8</ele><time>2020-05-14T07:46:37Z</time></trkpt>

    <trkpt lat="50.040266"
    lon="8.715677"><ele>139.8</ele><time>2020-05-14T07:46:44Z</time></trkpt>

    <trkpt lat="50.041553"
    lon="8.716575"><ele>141.2</ele><time>2020-05-14T07:46:51Z</time></trkpt>

    <trkpt lat="50.045223"
    lon="8.719615"><ele>137.6</ele><time>2020-05-14T07:47:12Z</time></trkpt>

    <trkpt lat="50.045765"
    lon="8.72004"><ele>138.8</ele><time>2020-05-14T07:47:15Z</time></trkpt>

    <trkpt lat="50.047578"
    lon="8.72137"><ele>132.6</ele><time>2020-05-14T07:47:25Z</time></trkpt>

    <trkpt lat="50.048453"
    lon="8.721881"><ele>133.2</ele><time>2020-05-14T07:47:30Z</time></trkpt>

    <trkpt lat="50.048944"
    lon="8.722137"><ele>133.2</ele><time>2020-05-14T07:47:33Z</time></trkpt>

    <trkpt lat="50.04992"
    lon="8.722592"><ele>133.8</ele><time>2020-05-14T07:47:38Z</time></trkpt>

    <trkpt lat="50.051217"
    lon="8.723063"><ele>134.4</ele><time>2020-05-14T07:47:44Z</time></trkpt>

    <trkpt lat="50.052314"
    lon="8.723372"><ele>132.8</ele><time>2020-05-14T07:47:50Z</time></trkpt>

    <trkpt lat="50.053713"
    lon="8.723674"><ele>132.0</ele><time>2020-05-14T07:47:57Z</time></trkpt>

    <trkpt lat="50.056529"
    lon="8.724188"><ele>130.4</ele><time>2020-05-14T07:48:11Z</time></trkpt>

    <trkpt lat="50.05815"
    lon="8.72456"><ele>130.6</ele><time>2020-05-14T07:48:20Z</time></trkpt>

    <trkpt lat="50.059244"
    lon="8.724882"><ele>129.6</ele><time>2020-05-14T07:48:25Z</time></trkpt>

    <trkpt lat="50.060851"
    lon="8.725426"><ele>131.8</ele><time>2020-05-14T07:48:33Z</time></trkpt>

    <trkpt lat="50.062277"
    lon="8.725994"><ele>133.0</ele><time>2020-05-14T07:48:41Z</time></trkpt>

    <trkpt lat="50.063749"
    lon="8.726677"><ele>134.2</ele><time>2020-05-14T07:48:48Z</time></trkpt>

    <trkpt lat="50.065511"
    lon="8.727601"><ele>133.2</ele><time>2020-05-14T07:48:58Z</time></trkpt>

    <trkpt lat="50.066335"
    lon="8.728095"><ele>134.2</ele><time>2020-05-14T07:49:02Z</time></trkpt>

    <trkpt lat="50.067745"
    lon="8.729016"><ele>135.6</ele><time>2020-05-14T07:49:10Z</time></trkpt>

    <trkpt lat="50.069574"
    lon="8.730356"><ele>134.6</ele><time>2020-05-14T07:49:20Z</time></trkpt>

    <trkpt lat="50.07034"
    lon="8.730971"><ele>133.0</ele><time>2020-05-14T07:49:24Z</time></trkpt>

    <trkpt lat="50.071299"
    lon="8.731803"><ele>134.2</ele><time>2020-05-14T07:49:30Z</time></trkpt>

    <trkpt lat="50.072426"
    lon="8.732745"><ele>136.0</ele><time>2020-05-14T07:49:36Z</time></trkpt>

    <trkpt lat="50.073389"
    lon="8.733509"><ele>135.4</ele><time>2020-05-14T07:49:42Z</time></trkpt>

    <trkpt lat="50.074331"
    lon="8.734214"><ele>134.2</ele><time>2020-05-14T07:49:47Z</time></trkpt>

    <trkpt lat="50.075209"
    lon="8.734797"><ele>134.8</ele><time>2020-05-14T07:49:52Z</time></trkpt>

    <trkpt lat="50.075927"
    lon="8.73523"><ele>132.4</ele><time>2020-05-14T07:49:56Z</time></trkpt>

    <trkpt lat="50.076664"
    lon="8.7356"><ele>132.4</ele><time>2020-05-14T07:49:59Z</time></trkpt>

    <trkpt lat="50.078163"
    lon="8.736215"><ele>131.0</ele><time>2020-05-14T07:50:07Z</time></trkpt>

    <trkpt lat="50.079619"
    lon="8.736611"><ele>129.8</ele><time>2020-05-14T07:50:15Z</time></trkpt>

    <trkpt lat="50.08143"
    lon="8.736857"><ele>129.8</ele><time>2020-05-14T07:50:24Z</time></trkpt>

    <trkpt lat="50.084118"
    lon="8.737076"><ele>122.0</ele><time>2020-05-14T07:50:37Z</time></trkpt>

    <trkpt lat="50.085161"
    lon="8.737214"><ele>126.0</ele><time>2020-05-14T07:50:43Z</time></trkpt>

    <trkpt lat="50.08582"
    lon="8.737341"><ele>126.0</ele><time>2020-05-14T07:50:46Z</time></trkpt>

    <trkpt lat="50.086405"
    lon="8.737482"><ele>129.8</ele><time>2020-05-14T07:50:49Z</time></trkpt>

    <trkpt lat="50.087193"
    lon="8.737711"><ele>131.2</ele><time>2020-05-14T07:50:53Z</time></trkpt>

    <trkpt lat="50.087964"
    lon="8.737974"><ele>136.8</ele><time>2020-05-14T07:50:57Z</time></trkpt>

    <trkpt lat="50.089253"
    lon="8.738518"><ele>138.6</ele><time>2020-05-14T07:51:04Z</time></trkpt>

    <trkpt lat="50.091631"
    lon="8.739656"><ele>137.6</ele><time>2020-05-14T07:51:16Z</time></trkpt>

    <trkpt lat="50.092503"
    lon="8.740036"><ele>130.6</ele><time>2020-05-14T07:51:21Z</time></trkpt>

    <trkpt lat="50.093925"
    lon="8.740547"><ele>126.2</ele><time>2020-05-14T07:51:28Z</time></trkpt>

    <trkpt lat="50.094951"
    lon="8.740787"><ele>123.2</ele><time>2020-05-14T07:51:33Z</time></trkpt>

    <trkpt lat="50.09524"
    lon="8.740834"><ele>121.4</ele><time>2020-05-14T07:51:35Z</time></trkpt>

    <trkpt lat="50.095736"
    lon="8.740875"><ele>121.4</ele><time>2020-05-14T07:51:37Z</time></trkpt>

    <trkpt lat="50.09656"
    lon="8.740902"><ele>118.2</ele><time>2020-05-14T07:51:41Z</time></trkpt>

    <trkpt lat="50.097195"
    lon="8.740874"><ele>116.2</ele><time>2020-05-14T07:51:44Z</time></trkpt>

    <trkpt lat="50.098296"
    lon="8.740694"><ele>113.8</ele><time>2020-05-14T07:51:50Z</time></trkpt>

    <trkpt lat="50.099378"
    lon="8.740384"><ele>108.8</ele><time>2020-05-14T07:51:55Z</time></trkpt>

    <trkpt lat="50.100022"
    lon="8.740138"><ele>106.8</ele><time>2020-05-14T07:51:59Z</time></trkpt>

    <trkpt lat="50.102017"
    lon="8.739272"><ele>101.8</ele><time>2020-05-14T07:52:09Z</time></trkpt>

    <trkpt lat="50.102938"
    lon="8.738931"><ele>99.6</ele><time>2020-05-14T07:52:14Z</time></trkpt>

    <trkpt lat="50.103837"
    lon="8.738737"><ele>99.4</ele><time>2020-05-14T07:52:18Z</time></trkpt>

    <trkpt lat="50.104447"
    lon="8.738653"><ele>98.6</ele><time>2020-05-14T07:52:21Z</time></trkpt>

    <trkpt lat="50.106053"
    lon="8.738525"><ele>100.4</ele><time>2020-05-14T07:52:30Z</time></trkpt>

    <trkpt lat="50.106517"
    lon="8.738445"><ele>100.4</ele><time>2020-05-14T07:52:32Z</time></trkpt>

    <trkpt lat="50.107084"
    lon="8.738307"><ele>102.2</ele><time>2020-05-14T07:52:35Z</time></trkpt>

    <trkpt lat="50.107457"
    lon="8.738168"><ele>102.2</ele><time>2020-05-14T07:52:37Z</time></trkpt>

    <trkpt lat="50.107983"
    lon="8.737916"><ele>104.2</ele><time>2020-05-14T07:52:39Z</time></trkpt>

    <trkpt lat="50.108645"
    lon="8.737504"><ele>103.2</ele><time>2020-05-14T07:52:43Z</time></trkpt>

    <trkpt lat="50.109126"
    lon="8.737161"><ele>103.2</ele><time>2020-05-14T07:52:46Z</time></trkpt>

    <trkpt lat="50.110293"
    lon="8.736253"><ele>101.2</ele><time>2020-05-14T07:52:52Z</time></trkpt>

    <trkpt lat="50.112425"
    lon="8.734656"><ele>98.8</ele><time>2020-05-14T07:53:04Z</time></trkpt>

    <trkpt lat="50.11323"
    lon="8.734105"><ele>100.2</ele><time>2020-05-14T07:53:08Z</time></trkpt>

    <trkpt lat="50.113566"
    lon="8.733917"><ele>101.6</ele><time>2020-05-14T07:53:10Z</time></trkpt>

    <trkpt lat="50.114214"
    lon="8.733606"><ele>102.4</ele><time>2020-05-14T07:53:14Z</time></trkpt>

    <trkpt lat="50.116362"
    lon="8.73269"><ele>101.8</ele><time>2020-05-14T07:53:25Z</time></trkpt>

    <trkpt lat="50.117171"
    lon="8.732315"><ele>101.4</ele><time>2020-05-14T07:53:29Z</time></trkpt>

    <trkpt lat="50.117813"
    lon="8.731964"><ele>101.2</ele><time>2020-05-14T07:53:32Z</time></trkpt>

    <trkpt lat="50.118941"
    lon="8.731242"><ele>100.2</ele><time>2020-05-14T07:53:39Z</time></trkpt>

    <trkpt lat="50.120069"
    lon="8.730444"><ele>101.4</ele><time>2020-05-14T07:53:45Z</time></trkpt>

    <trkpt lat="50.121964"
    lon="8.728926"><ele>103.4</ele><time>2020-05-14T07:53:55Z</time></trkpt>

    <trkpt lat="50.123809"
    lon="8.727391"><ele>101.8</ele><time>2020-05-14T07:54:06Z</time></trkpt>

    <trkpt lat="50.12501"
    lon="8.726463"><ele>102.8</ele><time>2020-05-14T07:54:13Z</time></trkpt>

    <trkpt lat="50.125762"
    lon="8.725938"><ele>102.8</ele><time>2020-05-14T07:54:17Z</time></trkpt>

    <trkpt lat="50.126695"
    lon="8.725354"><ele>101.2</ele><time>2020-05-14T07:54:22Z</time></trkpt>

    <trkpt lat="50.127175"
    lon="8.725099"><ele>101.2</ele><time>2020-05-14T07:54:24Z</time></trkpt>

    <trkpt lat="50.127968"
    lon="8.72479"><ele>101.2</ele><time>2020-05-14T07:54:29Z</time></trkpt>

    <trkpt lat="50.128467"
    lon="8.724631"><ele>102.6</ele><time>2020-05-14T07:54:31Z</time></trkpt>

    <trkpt lat="50.129041"
    lon="8.724496"><ele>102.6</ele><time>2020-05-14T07:54:34Z</time></trkpt>

    <trkpt lat="50.129418"
    lon="8.724457"><ele>102.6</ele><time>2020-05-14T07:54:36Z</time></trkpt>

    <trkpt lat="50.129568"
    lon="8.724454"><ele>102.6</ele><time>2020-05-14T07:54:37Z</time></trkpt>

    <trkpt lat="50.12999"
    lon="8.724608"><ele>102.6</ele><time>2020-05-14T07:54:39Z</time></trkpt>

    <trkpt lat="50.13022"
    lon="8.724754"><ele>101.0</ele><time>2020-05-14T07:54:40Z</time></trkpt>

    <trkpt lat="50.130555"
    lon="8.725029"><ele>100.8</ele><time>2020-05-14T07:54:42Z</time></trkpt>

    <trkpt lat="50.130684"
    lon="8.725105"><ele>100.8</ele><time>2020-05-14T07:54:43Z</time></trkpt>

    <trkpt lat="50.130931"
    lon="8.725194"><ele>99.6</ele><time>2020-05-14T07:54:44Z</time></trkpt>

    <trkpt lat="50.131129"
    lon="8.725209"><ele>99.6</ele><time>2020-05-14T07:54:45Z</time></trkpt>

    <trkpt lat="50.131364"
    lon="8.725183"><ele>99.6</ele><time>2020-05-14T07:54:46Z</time></trkpt>

    <trkpt lat="50.131631"
    lon="8.725086"><ele>99.6</ele><time>2020-05-14T07:54:47Z</time></trkpt>

    <trkpt lat="50.133657"
    lon="8.724186"><ele>98.6</ele><time>2020-05-14T07:54:58Z</time></trkpt>

    <trkpt lat="50.134071"
    lon="8.723955"><ele>98.8</ele><time>2020-05-14T07:55:00Z</time></trkpt>

    <trkpt lat="50.134507"
    lon="8.723672"><ele>99.0</ele><time>2020-05-14T07:55:03Z</time></trkpt>

    <trkpt lat="50.134762"
    lon="8.723472"><ele>99.0</ele><time>2020-05-14T07:55:04Z</time></trkpt>

    <trkpt lat="50.135252"
    lon="8.722998"><ele>100.6</ele><time>2020-05-14T07:55:07Z</time></trkpt>

    <trkpt lat="50.135747"
    lon="8.722388"><ele>101.6</ele><time>2020-05-14T07:55:10Z</time></trkpt>

    <trkpt lat="50.135985"
    lon="8.722042"><ele>103.0</ele><time>2020-05-14T07:55:12Z</time></trkpt>

    <trkpt lat="50.136221"
    lon="8.721649"><ele>104.0</ele><time>2020-05-14T07:55:13Z</time></trkpt>

    <trkpt lat="50.136468"
    lon="8.721172"><ele>104.0</ele><time>2020-05-14T07:55:15Z</time></trkpt>

    <trkpt lat="50.136646"
    lon="8.72079"><ele>105.8</ele><time>2020-05-14T07:55:17Z</time></trkpt>

    <trkpt lat="50.136852"
    lon="8.720283"><ele>107.4</ele><time>2020-05-14T07:55:19Z</time></trkpt>

    <trkpt lat="50.137069"
    lon="8.719646"><ele>113.2</ele><time>2020-05-14T07:55:21Z</time></trkpt>

    <trkpt lat="50.137262"
    lon="8.71892"><ele>119.8</ele><time>2020-05-14T07:55:24Z</time></trkpt>

    <trkpt lat="50.137376"
    lon="8.718401"><ele>119.8</ele><time>2020-05-14T07:55:26Z</time></trkpt>

    <trkpt lat="50.137431"
    lon="8.718071"><ele>127.0</ele><time>2020-05-14T07:55:27Z</time></trkpt>

    <trkpt lat="50.137518"
    lon="8.71732"><ele>131.4</ele><time>2020-05-14T07:55:29Z</time></trkpt>

    <trkpt lat="50.137579"
    lon="8.716555"><ele>135.4</ele><time>2020-05-14T07:55:32Z</time></trkpt>

    <trkpt lat="50.13768"
    lon="8.71458"><ele>140.0</ele><time>2020-05-14T07:55:38Z</time></trkpt>

    <trkpt lat="50.137745"
    lon="8.713686"><ele>141.4</ele><time>2020-05-14T07:55:41Z</time></trkpt>

    <trkpt lat="50.137936"
    lon="8.71235"><ele>146.0</ele><time>2020-05-14T07:55:45Z</time></trkpt>

    <trkpt lat="50.13803"
    lon="8.711891"><ele>146.0</ele><time>2020-05-14T07:55:47Z</time></trkpt>

    <trkpt lat="50.138235"
    lon="8.711089"><ele>147.8</ele><time>2020-05-14T07:55:50Z</time></trkpt>

    <trkpt lat="50.138606"
    lon="8.710063"><ele>147.8</ele><time>2020-05-14T07:55:54Z</time></trkpt>

    <trkpt lat="50.13901"
    lon="8.709549"><ele>149.6</ele><time>2020-05-14T07:55:58Z</time></trkpt>

    <trkpt lat="50.139154"
    lon="8.709417"><ele>149.6</ele><time>2020-05-14T07:56:00Z</time></trkpt>

    <trkpt lat="50.139907"
    lon="8.708849"><ele>148.6</ele><time>2020-05-14T07:56:08Z</time></trkpt>

    <trkpt lat="50.140147"
    lon="8.708571"><ele>148.0</ele><time>2020-05-14T07:56:11Z</time></trkpt>

    <trkpt lat="50.14038"
    lon="8.70818"><ele>149.4</ele><time>2020-05-14T07:56:14Z</time></trkpt>

    <trkpt lat="50.140807"
    lon="8.70738"><ele>151.2</ele><time>2020-05-14T07:56:20Z</time></trkpt>

    <trkpt lat="50.141132"
    lon="8.706906"><ele>151.8</ele><time>2020-05-14T07:56:24Z</time></trkpt>

    <trkpt lat="50.14145"
    lon="8.706539"><ele>153.8</ele><time>2020-05-14T07:56:28Z</time></trkpt>

    <trkpt lat="50.141814"
    lon="8.706219"><ele>154.0</ele><time>2020-05-14T07:56:32Z</time></trkpt>

    <trkpt lat="50.142342"
    lon="8.705877"><ele>154.0</ele><time>2020-05-14T07:56:37Z</time></trkpt>

    <trkpt lat="50.142668"
    lon="8.705721"><ele>156.0</ele><time>2020-05-14T07:56:40Z</time></trkpt>

    <trkpt lat="50.144043"
    lon="8.705153"><ele>156.8</ele><time>2020-05-14T07:56:53Z</time></trkpt>

    <trkpt lat="50.144161"
    lon="8.705125"><ele>156.8</ele><time>2020-05-14T07:56:55Z</time></trkpt>

    <trkpt lat="50.144306"
    lon="8.705144"><ele>157.4</ele><time>2020-05-14T07:56:56Z</time></trkpt>

    <trkpt lat="50.144418"
    lon="8.705188"><ele>157.4</ele><time>2020-05-14T07:56:57Z</time></trkpt>

    <trkpt lat="50.145003"
    lon="8.705696"><ele>158.2</ele><time>2020-05-14T07:57:03Z</time></trkpt>

    <trkpt lat="50.145371"
    lon="8.705967"><ele>160.4</ele><time>2020-05-14T07:57:07Z</time></trkpt>

    <trkpt lat="50.146342"
    lon="8.706755"><ele>163.6</ele><time>2020-05-14T07:57:17Z</time></trkpt>

    <trkpt lat="50.146967"
    lon="8.707291"><ele>165.2</ele><time>2020-05-14T07:57:24Z</time></trkpt>

    <trkpt lat="50.147722"
    lon="8.708085"><ele>167.4</ele><time>2020-05-14T07:57:32Z</time></trkpt>

    <trkpt lat="50.151144"
    lon="8.711787"><ele>176.2</ele><time>2020-05-14T07:58:11Z</time></trkpt>

    <trkpt lat="50.151776"
    lon="8.712485"><ele>178.8</ele><time>2020-05-14T07:58:18Z</time></trkpt>

    <trkpt lat="50.152145"
    lon="8.712933"><ele>177.4</ele><time>2020-05-14T07:58:23Z</time></trkpt>

    <trkpt lat="50.15233"
    lon="8.713196"><ele>177.4</ele><time>2020-05-14T07:58:25Z</time></trkpt>

    <trkpt lat="50.152586"
    lon="8.713626"><ele>179.4</ele><time>2020-05-14T07:58:28Z</time></trkpt>

    <trkpt lat="50.152975"
    lon="8.714434"><ele>177.8</ele><time>2020-05-14T07:58:34Z</time></trkpt>

    <trkpt lat="50.153455"
    lon="8.715545"><ele>178.2</ele><time>2020-05-14T07:58:42Z</time></trkpt>

    <trkpt lat="50.153584"
    lon="8.715812"><ele>178.2</ele><time>2020-05-14T07:58:44Z</time></trkpt>

    <trkpt lat="50.153747"
    lon="8.716117"><ele>177.6</ele><time>2020-05-14T07:58:47Z</time></trkpt>

    <trkpt lat="50.153994"
    lon="8.716522"><ele>177.6</ele><time>2020-05-14T07:58:50Z</time></trkpt>

    <trkpt lat="50.154328"
    lon="8.716977"><ele>178.2</ele><time>2020-05-14T07:58:54Z</time></trkpt>

    <trkpt lat="50.154626"
    lon="8.717334"><ele>178.2</ele><time>2020-05-14T07:58:58Z</time></trkpt>

    <trkpt lat="50.154878"
    lon="8.717595"><ele>177.6</ele><time>2020-05-14T07:59:01Z</time></trkpt>

    <trkpt lat="50.15592"
    lon="8.7185"><ele>179.2</ele><time>2020-05-14T07:59:12Z</time></trkpt>

    <trkpt lat="50.156714"
    lon="8.719279"><ele>179.6</ele><time>2020-05-14T07:59:20Z</time></trkpt>

    <trkpt lat="50.157178"
    lon="8.719864"><ele>179.6</ele><time>2020-05-14T07:59:26Z</time></trkpt>

    <trkpt lat="50.157593"
    lon="8.720457"><ele>179.6</ele><time>2020-05-14T07:59:31Z</time></trkpt>

    <trkpt lat="50.158001"
    lon="8.721142"><ele>180.2</ele><time>2020-05-14T07:59:37Z</time></trkpt>

    <trkpt lat="50.158402"
    lon="8.721921"><ele>180.4</ele><time>2020-05-14T07:59:43Z</time></trkpt>

    <trkpt lat="50.159086"
    lon="8.723358"><ele>182.8</ele><time>2020-05-14T07:59:53Z</time></trkpt>

    <trkpt lat="50.159924"
    lon="8.725062"><ele>187.4</ele><time>2020-05-14T08:00:06Z</time></trkpt>

    <trkpt lat="50.160354"
    lon="8.725905"><ele>187.8</ele><time>2020-05-14T08:00:13Z</time></trkpt>

    <trkpt lat="50.160791"
    lon="8.726706"><ele>189.0</ele><time>2020-05-14T08:00:19Z</time></trkpt>

    <trkpt lat="50.161365"
    lon="8.727609"><ele>186.8</ele><time>2020-05-14T08:00:27Z</time></trkpt>

    <trkpt lat="50.161907"
    lon="8.728294"><ele>184.6</ele><time>2020-05-14T08:00:33Z</time></trkpt>

    <trkpt lat="50.162069"
    lon="8.728465"><ele>185.6</ele><time>2020-05-14T08:00:35Z</time></trkpt>

    <trkpt lat="50.162414"
    lon="8.72879"><ele>185.6</ele><time>2020-05-14T08:00:39Z</time></trkpt>

    <trkpt lat="50.162943"
    lon="8.729151"><ele>185.6</ele><time>2020-05-14T08:00:44Z</time></trkpt>

    <trkpt lat="50.163453"
    lon="8.729416"><ele>189.0</ele><time>2020-05-14T08:00:49Z</time></trkpt>

    <trkpt lat="50.163943"
    lon="8.729588"><ele>189.0</ele><time>2020-05-14T08:00:54Z</time></trkpt>

    <trkpt lat="50.164428"
    lon="8.729689"><ele>189.0</ele><time>2020-05-14T08:00:58Z</time></trkpt>

    <trkpt lat="50.164778"
    lon="8.729699"><ele>189.0</ele><time>2020-05-14T08:01:01Z</time></trkpt>

    <trkpt lat="50.165465"
    lon="8.729839"><ele>186.2</ele><time>2020-05-14T08:01:08Z</time></trkpt>

    <trkpt lat="50.167112"
    lon="8.730109"><ele>180.8</ele><time>2020-05-14T08:01:23Z</time></trkpt>

    <trkpt lat="50.167291"
    lon="8.730164"><ele>180.8</ele><time>2020-05-14T08:01:25Z</time></trkpt>

    <trkpt lat="50.167811"
    lon="8.730261"><ele>175.6</ele><time>2020-05-14T08:01:30Z</time></trkpt>

    <trkpt lat="50.16805"
    lon="8.73027"><ele>175.6</ele><time>2020-05-14T08:01:32Z</time></trkpt>

    <trkpt lat="50.16844"
    lon="8.730157"><ele>171.2</ele><time>2020-05-14T08:01:36Z</time></trkpt>

    <trkpt lat="50.168477"
    lon="8.730206"><ele>171.2</ele><time>2020-05-14T08:01:37Z</time></trkpt>

    <trkpt lat="50.16857"
    lon="8.730243"><ele>171.2</ele><time>2020-05-14T08:01:38Z</time></trkpt>

    <trkpt lat="50.168658"
    lon="8.730189"><ele>171.2</ele><time>2020-05-14T08:01:39Z</time></trkpt>

    <trkpt lat="50.168691"
    lon="8.730132"><ele>171.2</ele><time>2020-05-14T08:01:39Z</time></trkpt>

    <trkpt lat="50.168994"
    lon="8.730333"><ele>171.2</ele><time>2020-05-14T08:01:43Z</time></trkpt>

    <trkpt lat="50.169589"
    lon="8.730467"><ele>167.8</ele><time>2020-05-14T08:01:51Z</time></trkpt>

    <trkpt lat="50.169794"
    lon="8.730534"><ele>167.8</ele><time>2020-05-14T08:01:53Z</time></trkpt>

    <trkpt lat="50.17042"
    lon="8.73084"><ele>159.2</ele><time>2020-05-14T08:02:01Z</time></trkpt>

    <trkpt lat="50.170803"
    lon="8.731104"><ele>159.2</ele><time>2020-05-14T08:02:06Z</time></trkpt>

    <trkpt lat="50.171817"
    lon="8.731884"><ele>148.6</ele><time>2020-05-14T08:02:20Z</time></trkpt>

    <trkpt lat="50.172428"
    lon="8.732287"><ele>148.6</ele><time>2020-05-14T08:02:27Z</time></trkpt>

    <trkpt lat="50.176879"
    lon="8.734857"><ele>115.0</ele><time>2020-05-14T08:03:24Z</time></trkpt>

    <trkpt lat="50.177518"
    lon="8.735235"><ele>112.4</ele><time>2020-05-14T08:03:32Z</time></trkpt>

    <trkpt lat="50.178002"
    lon="8.735568"><ele>112.4</ele><time>2020-05-14T08:03:39Z</time></trkpt>

    <trkpt lat="50.178145"
    lon="8.735591"><ele>112.4</ele><time>2020-05-14T08:03:41Z</time></trkpt>

    <trkpt lat="50.178207"
    lon="8.735666"><ele>112.4</ele><time>2020-05-14T08:03:42Z</time></trkpt>

    <trkpt lat="50.178309"
    lon="8.735646"><ele>112.4</ele><time>2020-05-14T08:03:45Z</time></trkpt>

    <trkpt lat="50.178426"
    lon="8.735747"><ele>110.6</ele><time>2020-05-14T08:03:48Z</time></trkpt>

    <trkpt lat="50.179111"
    lon="8.736197"><ele>112.2</ele><time>2020-05-14T08:04:04Z</time></trkpt>

    <trkpt lat="50.17918"
    lon="8.736264"><ele>110.8</ele><time>2020-05-14T08:04:05Z</time></trkpt>

    <trkpt lat="50.179384"
    lon="8.736572"><ele>110.8</ele><time>2020-05-14T08:04:12Z</time></trkpt>

    <trkpt lat="50.17951"
    lon="8.736903"><ele>112.2</ele><time>2020-05-14T08:04:17Z</time></trkpt>

    <trkpt lat="50.179615"
    lon="8.737349"><ele>112.2</ele><time>2020-05-14T08:04:23Z</time></trkpt>

    <trkpt lat="50.179954"
    lon="8.739086"><ele>116.6</ele><time>2020-05-14T08:04:49Z</time></trkpt>

    <trkpt lat="50.180038"
    lon="8.739426"><ele>114.0</ele><time>2020-05-14T08:04:54Z</time></trkpt>

    <trkpt lat="50.180164"
    lon="8.73982"><ele>114.0</ele><time>2020-05-14T08:05:00Z</time></trkpt>

    <trkpt lat="50.180226"
    lon="8.73997"><ele>114.0</ele><time>2020-05-14T08:05:02Z</time></trkpt>

    <trkpt lat="50.180692"
    lon="8.740754"><ele>114.8</ele><time>2020-05-14T08:05:18Z</time></trkpt>

    </trkseg>

    </trk>

    </gpx>
  Idstein-FFM.gpx: >
    <?xml version="1.0" encoding="UTF-8" standalone="no" ?>

    <gpx xmlns="http://www.topografix.com/GPX/1/1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" creator="Kurviger.de"
    version="1.1" xmlns:gh="https://kurviger.de/public/schema/gpx/1.1">

    <metadata>

    <name>Idstein-FFM</name>

    <copyright author="OpenStreetMap contributors"/>

    <link href="https://kurviger.de">

    <text>Kurviger.de GPX</text>

    </link>

    <time>2020-05-14T07:37:42Z</time>

    </metadata>

    <trk><name>Idstein-FFM</name><trkseg>

    <trkpt lat="50.22101"
    lon="8.269912"><ele>268.8</ele><time>2020-05-14T07:37:42Z</time></trkpt>

    <trkpt lat="50.22086"
    lon="8.270075"><ele>269.6</ele><time>2020-05-14T07:37:59Z</time></trkpt>

    <trkpt lat="50.220782"
    lon="8.270247"><ele>272.6</ele><time>2020-05-14T07:38:11Z</time></trkpt>

    <trkpt lat="50.220009"
    lon="8.271029"><ele>274.4</ele><time>2020-05-14T07:39:36Z</time></trkpt>

    <trkpt lat="50.219657"
    lon="8.271219"><ele>281.2</ele><time>2020-05-14T07:40:11Z</time></trkpt>

    <trkpt lat="50.219382"
    lon="8.271316"><ele>281.2</ele><time>2020-05-14T07:40:37Z</time></trkpt>

    <trkpt lat="50.219064"
    lon="8.271251"><ele>288.2</ele><time>2020-05-14T07:41:07Z</time></trkpt>

    <trkpt lat="50.218947"
    lon="8.271259"><ele>288.2</ele><time>2020-05-14T07:41:18Z</time></trkpt>

    <trkpt lat="50.218809"
    lon="8.271337"><ele>288.2</ele><time>2020-05-14T07:41:31Z</time></trkpt>

    <trkpt lat="50.218716"
    lon="8.271426"><ele>288.2</ele><time>2020-05-14T07:41:42Z</time></trkpt>

    <trkpt lat="50.218711"
    lon="8.271812"><ele>290.6</ele><time>2020-05-14T07:41:56Z</time></trkpt>

    <trkpt lat="50.218743"
    lon="8.27196"><ele>290.6</ele><time>2020-05-14T07:42:01Z</time></trkpt>

    <trkpt lat="50.219078"
    lon="8.272474"><ele>290.6</ele><time>2020-05-14T07:42:27Z</time></trkpt>

    <trkpt lat="50.219475"
    lon="8.272943"><ele>284.0</ele><time>2020-05-14T07:42:54Z</time></trkpt>

    <trkpt lat="50.220173"
    lon="8.273516"><ele>273.2</ele><time>2020-05-14T07:43:38Z</time></trkpt>

    <trkpt lat="50.220509"
    lon="8.273118"><ele>274.6</ele><time>2020-05-14T07:43:46Z</time></trkpt>

    <trkpt lat="50.220577"
    lon="8.274278"><ele>272.2</ele><time>2020-05-14T07:44:03Z</time></trkpt>

    <trkpt lat="50.2206"
    lon="8.274403"><ele>272.2</ele><time>2020-05-14T07:44:05Z</time></trkpt>

    <trkpt lat="50.220856"
    lon="8.274748"><ele>273.2</ele><time>2020-05-14T07:44:12Z</time></trkpt>

    <trkpt lat="50.221312"
    lon="8.273908"><ele>271.2</ele><time>2020-05-14T07:44:22Z</time></trkpt>

    <trkpt lat="50.221438"
    lon="8.273624"><ele>271.2</ele><time>2020-05-14T07:44:25Z</time></trkpt>

    <trkpt lat="50.222527"
    lon="8.271431"><ele>276.0</ele><time>2020-05-14T07:44:48Z</time></trkpt>

    <trkpt lat="50.222623"
    lon="8.271309"><ele>276.0</ele><time>2020-05-14T07:44:50Z</time></trkpt>

    <trkpt lat="50.222711"
    lon="8.27124"><ele>276.0</ele><time>2020-05-14T07:44:51Z</time></trkpt>

    <trkpt lat="50.222806"
    lon="8.271208"><ele>276.0</ele><time>2020-05-14T07:44:52Z</time></trkpt>

    <trkpt lat="50.223033"
    lon="8.271207"><ele>276.0</ele><time>2020-05-14T07:44:55Z</time></trkpt>

    <trkpt lat="50.223043"
    lon="8.271308"><ele>276.0</ele><time>2020-05-14T07:44:56Z</time></trkpt>

    <trkpt lat="50.223061"
    lon="8.271352"><ele>276.0</ele><time>2020-05-14T07:44:57Z</time></trkpt>

    <trkpt lat="50.223117"
    lon="8.271406"><ele>276.0</ele><time>2020-05-14T07:44:58Z</time></trkpt>

    <trkpt lat="50.223151"
    lon="8.271413"><ele>276.0</ele><time>2020-05-14T07:44:58Z</time></trkpt>

    <trkpt lat="50.223215"
    lon="8.271378"><ele>276.0</ele><time>2020-05-14T07:44:59Z</time></trkpt>

    <trkpt lat="50.223256"
    lon="8.271294"><ele>276.0</ele><time>2020-05-14T07:45:00Z</time></trkpt>

    <trkpt lat="50.223258"
    lon="8.271181"><ele>276.0</ele><time>2020-05-14T07:45:01Z</time></trkpt>

    <trkpt lat="50.223213"
    lon="8.271083"><ele>276.0</ele><time>2020-05-14T07:45:02Z</time></trkpt>

    <trkpt lat="50.223177"
    lon="8.271058"><ele>276.0</ele><time>2020-05-14T07:45:02Z</time></trkpt>

    <trkpt lat="50.22332"
    lon="8.270639"><ele>273.4</ele><time>2020-05-14T07:45:06Z</time></trkpt>

    <trkpt lat="50.223348"
    lon="8.270396"><ele>281.6</ele><time>2020-05-14T07:45:09Z</time></trkpt>

    <trkpt lat="50.223318"
    lon="8.270032"><ele>273.4</ele><time>2020-05-14T07:45:12Z</time></trkpt>

    <trkpt lat="50.223247"
    lon="8.269688"><ele>270.8</ele><time>2020-05-14T07:45:15Z</time></trkpt>

    <trkpt lat="50.22312"
    lon="8.269365"><ele>270.8</ele><time>2020-05-14T07:45:18Z</time></trkpt>

    <trkpt lat="50.223004"
    lon="8.269225"><ele>270.8</ele><time>2020-05-14T07:45:20Z</time></trkpt>

    <trkpt lat="50.222835"
    lon="8.269159"><ele>268.8</ele><time>2020-05-14T07:45:23Z</time></trkpt>

    <trkpt lat="50.222833"
    lon="8.269117"><ele>268.8</ele><time>2020-05-14T07:45:23Z</time></trkpt>

    <trkpt lat="50.222784"
    lon="8.269021"><ele>268.8</ele><time>2020-05-14T07:45:24Z</time></trkpt>

    <trkpt lat="50.222706"
    lon="8.269023"><ele>268.8</ele><time>2020-05-14T07:45:25Z</time></trkpt>

    <trkpt lat="50.222684"
    lon="8.269047"><ele>268.8</ele><time>2020-05-14T07:45:26Z</time></trkpt>

    <trkpt lat="50.222634"
    lon="8.268963"><ele>268.8</ele><time>2020-05-14T07:45:27Z</time></trkpt>

    <trkpt lat="50.222166"
    lon="8.267733"><ele>267.0</ele><time>2020-05-14T07:45:39Z</time></trkpt>

    <trkpt lat="50.221957"
    lon="8.267146"><ele>266.8</ele><time>2020-05-14T07:45:44Z</time></trkpt>

    <trkpt lat="50.22189"
    lon="8.266824"><ele>266.8</ele><time>2020-05-14T07:45:47Z</time></trkpt>

    <trkpt lat="50.221912"
    lon="8.266808"><ele>266.8</ele><time>2020-05-14T07:45:48Z</time></trkpt>

    <trkpt lat="50.221946"
    lon="8.26671"><ele>266.8</ele><time>2020-05-14T07:45:48Z</time></trkpt>

    <trkpt lat="50.221943"
    lon="8.266672"><ele>266.8</ele><time>2020-05-14T07:45:49Z</time></trkpt>

    <trkpt lat="50.221898"
    lon="8.266595"><ele>267.6</ele><time>2020-05-14T07:45:49Z</time></trkpt>

    <trkpt lat="50.221831"
    lon="8.2666"><ele>267.6</ele><time>2020-05-14T07:45:50Z</time></trkpt>

    <trkpt lat="50.221813"
    lon="8.266621"><ele>267.6</ele><time>2020-05-14T07:45:50Z</time></trkpt>

    <trkpt lat="50.22179"
    lon="8.266716"><ele>266.8</ele><time>2020-05-14T07:45:51Z</time></trkpt>

    <trkpt lat="50.221795"
    lon="8.26675"><ele>266.8</ele><time>2020-05-14T07:45:51Z</time></trkpt>

    <trkpt lat="50.221695"
    lon="8.26679"><ele>266.8</ele><time>2020-05-14T07:45:53Z</time></trkpt>

    <trkpt lat="50.221338"
    lon="8.267062"><ele>268.8</ele><time>2020-05-14T07:45:57Z</time></trkpt>

    <trkpt lat="50.221247"
    lon="8.267199"><ele>268.8</ele><time>2020-05-14T07:45:59Z</time></trkpt>

    <trkpt lat="50.220809"
    lon="8.267616"><ele>271.0</ele><time>2020-05-14T07:46:04Z</time></trkpt>

    <trkpt lat="50.220748"
    lon="8.267601"><ele>271.0</ele><time>2020-05-14T07:46:05Z</time></trkpt>

    <trkpt lat="50.220562"
    lon="8.267361"><ele>272.2</ele><time>2020-05-14T07:46:08Z</time></trkpt>

    <trkpt lat="50.219891"
    lon="8.267257"><ele>275.6</ele><time>2020-05-14T07:46:16Z</time></trkpt>

    <trkpt lat="50.219891"
    lon="8.26722"><ele>275.6</ele><time>2020-05-14T07:46:16Z</time></trkpt>

    <trkpt lat="50.219848"
    lon="8.267136"><ele>275.6</ele><time>2020-05-14T07:46:17Z</time></trkpt>

    <trkpt lat="50.219825"
    lon="8.267128"><ele>275.6</ele><time>2020-05-14T07:46:17Z</time></trkpt>

    <trkpt lat="50.219766"
    lon="8.267164"><ele>275.6</ele><time>2020-05-14T07:46:18Z</time></trkpt>

    <trkpt lat="50.219748"
    lon="8.267225"><ele>275.6</ele><time>2020-05-14T07:46:19Z</time></trkpt>

    <trkpt lat="50.218799"
    lon="8.267"><ele>276.8</ele><time>2020-05-14T07:46:31Z</time></trkpt>

    <trkpt lat="50.218478"
    lon="8.266884"><ele>276.8</ele><time>2020-05-14T07:46:36Z</time></trkpt>

    <trkpt lat="50.218294"
    lon="8.26675"><ele>276.4</ele><time>2020-05-14T07:46:38Z</time></trkpt>

    <trkpt lat="50.218096"
    lon="8.266485"><ele>278.8</ele><time>2020-05-14T07:46:42Z</time></trkpt>

    <trkpt lat="50.218011"
    lon="8.266315"><ele>278.8</ele><time>2020-05-14T07:46:43Z</time></trkpt>

    <trkpt lat="50.217958"
    lon="8.266162"><ele>278.8</ele><time>2020-05-14T07:46:45Z</time></trkpt>

    <trkpt lat="50.217896"
    lon="8.265841"><ele>278.8</ele><time>2020-05-14T07:46:48Z</time></trkpt>

    <trkpt lat="50.21789"
    lon="8.265398"><ele>281.4</ele><time>2020-05-14T07:46:52Z</time></trkpt>

    <trkpt lat="50.217531"
    lon="8.259161"><ele>302.6</ele><time>2020-05-14T07:47:45Z</time></trkpt>

    <trkpt lat="50.217558"
    lon="8.259149"><ele>302.6</ele><time>2020-05-14T07:47:45Z</time></trkpt>

    <trkpt lat="50.217599"
    lon="8.259091"><ele>302.6</ele><time>2020-05-14T07:47:46Z</time></trkpt>

    <trkpt lat="50.217608"
    lon="8.259005"><ele>302.6</ele><time>2020-05-14T07:47:46Z</time></trkpt>

    <trkpt lat="50.217581"
    lon="8.258929"><ele>302.6</ele><time>2020-05-14T07:47:47Z</time></trkpt>

    <trkpt lat="50.217637"
    lon="8.258813"><ele>302.6</ele><time>2020-05-14T07:47:48Z</time></trkpt>

    <trkpt lat="50.217799"
    lon="8.258509"><ele>302.6</ele><time>2020-05-14T07:47:52Z</time></trkpt>

    <trkpt lat="50.218226"
    lon="8.257861"><ele>305.0</ele><time>2020-05-14T07:47:59Z</time></trkpt>

    <trkpt lat="50.218336"
    lon="8.257645"><ele>304.2</ele><time>2020-05-14T07:48:02Z</time></trkpt>

    <trkpt lat="50.218373"
    lon="8.257509"><ele>304.2</ele><time>2020-05-14T07:48:03Z</time></trkpt>

    <trkpt lat="50.2184"
    lon="8.257236"><ele>305.6</ele><time>2020-05-14T07:48:05Z</time></trkpt>

    <trkpt lat="50.218343"
    lon="8.256555"><ele>308.0</ele><time>2020-05-14T07:48:11Z</time></trkpt>

    <trkpt lat="50.218283"
    lon="8.256155"><ele>311.4</ele><time>2020-05-14T07:48:15Z</time></trkpt>

    <trkpt lat="50.218331"
    lon="8.256076"><ele>311.4</ele><time>2020-05-14T07:48:15Z</time></trkpt>

    <trkpt lat="50.218335"
    lon="8.255969"><ele>308.0</ele><time>2020-05-14T07:48:16Z</time></trkpt>

    <trkpt lat="50.218295"
    lon="8.255882"><ele>311.4</ele><time>2020-05-14T07:48:17Z</time></trkpt>

    <trkpt lat="50.21823"
    lon="8.255854"><ele>311.4</ele><time>2020-05-14T07:48:17Z</time></trkpt>

    <trkpt lat="50.218168"
    lon="8.255897"><ele>311.4</ele><time>2020-05-14T07:48:18Z</time></trkpt>

    <trkpt lat="50.218042"
    lon="8.255745"><ele>315.0</ele><time>2020-05-14T07:48:20Z</time></trkpt>

    <trkpt lat="50.217346"
    lon="8.255275"><ele>317.2</ele><time>2020-05-14T07:48:27Z</time></trkpt>

    <trkpt lat="50.217112"
    lon="8.255061"><ele>317.2</ele><time>2020-05-14T07:48:29Z</time></trkpt>

    <trkpt lat="50.217004"
    lon="8.254923"><ele>321.2</ele><time>2020-05-14T07:48:31Z</time></trkpt>

    <trkpt lat="50.216795"
    lon="8.254597"><ele>321.2</ele><time>2020-05-14T07:48:33Z</time></trkpt>

    <trkpt lat="50.216287"
    lon="8.253766"><ele>327.4</ele><time>2020-05-14T07:48:40Z</time></trkpt>

    <trkpt lat="50.215943"
    lon="8.253331"><ele>335.4</ele><time>2020-05-14T07:48:45Z</time></trkpt>

    <trkpt lat="50.215552"
    lon="8.252899"><ele>335.0</ele><time>2020-05-14T07:48:49Z</time></trkpt>

    <trkpt lat="50.215377"
    lon="8.252732"><ele>335.0</ele><time>2020-05-14T07:48:51Z</time></trkpt>

    <trkpt lat="50.215085"
    lon="8.2525"><ele>335.0</ele><time>2020-05-14T07:48:54Z</time></trkpt>

    <trkpt lat="50.214159"
    lon="8.251836"><ele>345.6</ele><time>2020-05-14T07:49:04Z</time></trkpt>

    <trkpt lat="50.213862"
    lon="8.251542"><ele>352.4</ele><time>2020-05-14T07:49:07Z</time></trkpt>

    <trkpt lat="50.21364"
    lon="8.251226"><ele>352.4</ele><time>2020-05-14T07:49:10Z</time></trkpt>

    <trkpt lat="50.213317"
    lon="8.250649"><ele>355.2</ele><time>2020-05-14T07:49:15Z</time></trkpt>

    <trkpt lat="50.213109"
    lon="8.250201"><ele>355.2</ele><time>2020-05-14T07:49:18Z</time></trkpt>

    <trkpt lat="50.213049"
    lon="8.250037"><ele>355.2</ele><time>2020-05-14T07:49:19Z</time></trkpt>

    <trkpt lat="50.212928"
    lon="8.249589"><ele>352.4</ele><time>2020-05-14T07:49:23Z</time></trkpt>

    <trkpt lat="50.212764"
    lon="8.249537"><ele>352.4</ele><time>2020-05-14T07:49:23Z</time></trkpt>

    <trkpt lat="50.212625"
    lon="8.249568"><ele>352.4</ele><time>2020-05-14T07:49:24Z</time></trkpt>

    <trkpt lat="50.21244"
    lon="8.249666"><ele>355.8</ele><time>2020-05-14T07:49:25Z</time></trkpt>

    <trkpt lat="50.211879"
    lon="8.249791"><ele>355.8</ele><time>2020-05-14T07:49:27Z</time></trkpt>

    <trkpt lat="50.211564"
    lon="8.249912"><ele>358.0</ele><time>2020-05-14T07:49:28Z</time></trkpt>

    <trkpt lat="50.211483"
    lon="8.249995"><ele>358.0</ele><time>2020-05-14T07:49:29Z</time></trkpt>

    <trkpt lat="50.211193"
    lon="8.250497"><ele>361.0</ele><time>2020-05-14T07:49:31Z</time></trkpt>

    <trkpt lat="50.211034"
    lon="8.250688"><ele>361.0</ele><time>2020-05-14T07:49:31Z</time></trkpt>

    <trkpt lat="50.210672"
    lon="8.251008"><ele>358.4</ele><time>2020-05-14T07:49:33Z</time></trkpt>

    <trkpt lat="50.207507"
    lon="8.251783"><ele>370.6</ele><time>2020-05-14T07:49:46Z</time></trkpt>

    <trkpt lat="50.20635"
    lon="8.252116"><ele>381.2</ele><time>2020-05-14T07:49:51Z</time></trkpt>

    <trkpt lat="50.205016"
    lon="8.252561"><ele>373.6</ele><time>2020-05-14T07:49:57Z</time></trkpt>

    <trkpt lat="50.203563"
    lon="8.253117"><ele>390.4</ele><time>2020-05-14T07:50:03Z</time></trkpt>

    <trkpt lat="50.202202"
    lon="8.253713"><ele>387.2</ele><time>2020-05-14T07:50:08Z</time></trkpt>

    <trkpt lat="50.200913"
    lon="8.254355"><ele>370.8</ele><time>2020-05-14T07:50:14Z</time></trkpt>

    <trkpt lat="50.199595"
    lon="8.255073"><ele>362.0</ele><time>2020-05-14T07:50:20Z</time></trkpt>

    <trkpt lat="50.197878"
    lon="8.25611"><ele>362.2</ele><time>2020-05-14T07:50:27Z</time></trkpt>

    <trkpt lat="50.196359"
    lon="8.257141"><ele>365.6</ele><time>2020-05-14T07:50:34Z</time></trkpt>

    <trkpt lat="50.19479"
    lon="8.258312"><ele>370.6</ele><time>2020-05-14T07:50:41Z</time></trkpt>

    <trkpt lat="50.1931"
    lon="8.259713"><ele>365.4</ele><time>2020-05-14T07:50:49Z</time></trkpt>

    <trkpt lat="50.188038"
    lon="8.264344"><ele>362.6</ele><time>2020-05-14T07:51:13Z</time></trkpt>

    <trkpt lat="50.187422"
    lon="8.264844"><ele>370.2</ele><time>2020-05-14T07:51:16Z</time></trkpt>

    <trkpt lat="50.186626"
    lon="8.265426"><ele>373.8</ele><time>2020-05-14T07:51:19Z</time></trkpt>

    <trkpt lat="50.186142"
    lon="8.265758"><ele>373.8</ele><time>2020-05-14T07:51:21Z</time></trkpt>

    <trkpt lat="50.18563"
    lon="8.266075"><ele>371.0</ele><time>2020-05-14T07:51:24Z</time></trkpt>

    <trkpt lat="50.185033"
    lon="8.266386"><ele>371.0</ele><time>2020-05-14T07:51:26Z</time></trkpt>

    <trkpt lat="50.183462"
    lon="8.267134"><ele>373.4</ele><time>2020-05-14T07:51:33Z</time></trkpt>

    <trkpt lat="50.182679"
    lon="8.267529"><ele>374.0</ele><time>2020-05-14T07:51:36Z</time></trkpt>

    <trkpt lat="50.181907"
    lon="8.267987"><ele>385.2</ele><time>2020-05-14T07:51:40Z</time></trkpt>

    <trkpt lat="50.1813"
    lon="8.26843"><ele>381.6</ele><time>2020-05-14T07:51:42Z</time></trkpt>

    <trkpt lat="50.18047"
    lon="8.269168"><ele>382.0</ele><time>2020-05-14T07:51:46Z</time></trkpt>

    <trkpt lat="50.179842"
    lon="8.269831"><ele>393.8</ele><time>2020-05-14T07:51:49Z</time></trkpt>

    <trkpt lat="50.179308"
    lon="8.270485"><ele>381.4</ele><time>2020-05-14T07:51:52Z</time></trkpt>

    <trkpt lat="50.178735"
    lon="8.271289"><ele>377.8</ele><time>2020-05-14T07:51:55Z</time></trkpt>

    <trkpt lat="50.178478"
    lon="8.27168"><ele>363.6</ele><time>2020-05-14T07:51:57Z</time></trkpt>

    <trkpt lat="50.17797"
    lon="8.272555"><ele>358.4</ele><time>2020-05-14T07:52:00Z</time></trkpt>

    <trkpt lat="50.177458"
    lon="8.273574"><ele>365.8</ele><time>2020-05-14T07:52:03Z</time></trkpt>

    <trkpt lat="50.176957"
    lon="8.27474"><ele>365.6</ele><time>2020-05-14T07:52:07Z</time></trkpt>

    <trkpt lat="50.172719"
    lon="8.286246"><ele>378.2</ele><time>2020-05-14T07:52:42Z</time></trkpt>

    <trkpt lat="50.172317"
    lon="8.287274"><ele>389.0</ele><time>2020-05-14T07:52:45Z</time></trkpt>

    <trkpt lat="50.171988"
    lon="8.287999"><ele>385.6</ele><time>2020-05-14T07:52:47Z</time></trkpt>

    <trkpt lat="50.171672"
    lon="8.28865"><ele>381.4</ele><time>2020-05-14T07:52:49Z</time></trkpt>

    <trkpt lat="50.171349"
    lon="8.289265"><ele>385.0</ele><time>2020-05-14T07:52:51Z</time></trkpt>

    <trkpt lat="50.17099"
    lon="8.289873"><ele>385.0</ele><time>2020-05-14T07:52:54Z</time></trkpt>

    <trkpt lat="50.170446"
    lon="8.290737"><ele>388.8</ele><time>2020-05-14T07:52:57Z</time></trkpt>

    <trkpt lat="50.16974"
    lon="8.291713"><ele>381.8</ele><time>2020-05-14T07:53:01Z</time></trkpt>

    <trkpt lat="50.169154"
    lon="8.292422"><ele>393.4</ele><time>2020-05-14T07:53:04Z</time></trkpt>

    <trkpt lat="50.168434"
    lon="8.293181"><ele>380.4</ele><time>2020-05-14T07:53:07Z</time></trkpt>

    <trkpt lat="50.168061"
    lon="8.293534"><ele>375.4</ele><time>2020-05-14T07:53:09Z</time></trkpt>

    <trkpt lat="50.167456"
    lon="8.294059"><ele>383.0</ele><time>2020-05-14T07:53:12Z</time></trkpt>

    <trkpt lat="50.166567"
    lon="8.294767"><ele>371.2</ele><time>2020-05-14T07:53:16Z</time></trkpt>

    <trkpt lat="50.165784"
    lon="8.295429"><ele>355.0</ele><time>2020-05-14T07:53:20Z</time></trkpt>

    <trkpt lat="50.164883"
    lon="8.296296"><ele>343.2</ele><time>2020-05-14T07:53:24Z</time></trkpt>

    <trkpt lat="50.164279"
    lon="8.296995"><ele>336.2</ele><time>2020-05-14T07:53:27Z</time></trkpt>

    <trkpt lat="50.163757"
    lon="8.297658"><ele>333.2</ele><time>2020-05-14T07:53:30Z</time></trkpt>

    <trkpt lat="50.163039"
    lon="8.298656"><ele>332.6</ele><time>2020-05-14T07:53:34Z</time></trkpt>

    <trkpt lat="50.161608"
    lon="8.300865"><ele>328.8</ele><time>2020-05-14T07:53:42Z</time></trkpt>

    <trkpt lat="50.161145"
    lon="8.301544"><ele>328.8</ele><time>2020-05-14T07:53:44Z</time></trkpt>

    <trkpt lat="50.160723"
    lon="8.302088"><ele>330.6</ele><time>2020-05-14T07:53:47Z</time></trkpt>

    <trkpt lat="50.159951"
    lon="8.302989"><ele>327.8</ele><time>2020-05-14T07:53:51Z</time></trkpt>

    <trkpt lat="50.158923"
    lon="8.304002"><ele>318.8</ele><time>2020-05-14T07:53:56Z</time></trkpt>

    <trkpt lat="50.152763"
    lon="8.309768"><ele>347.4</ele><time>2020-05-14T07:54:25Z</time></trkpt>

    <trkpt lat="50.152157"
    lon="8.3104"><ele>343.8</ele><time>2020-05-14T07:54:28Z</time></trkpt>

    <trkpt lat="50.151652"
    lon="8.310995"><ele>346.6</ele><time>2020-05-14T07:54:30Z</time></trkpt>

    <trkpt lat="50.151429"
    lon="8.311292"><ele>346.6</ele><time>2020-05-14T07:54:32Z</time></trkpt>

    <trkpt lat="50.151013"
    lon="8.31194"><ele>340.8</ele><time>2020-05-14T07:54:34Z</time></trkpt>

    <trkpt lat="50.150643"
    lon="8.312652"><ele>344.4</ele><time>2020-05-14T07:54:36Z</time></trkpt>

    <trkpt lat="50.150322"
    lon="8.31342"><ele>339.8</ele><time>2020-05-14T07:54:39Z</time></trkpt>

    <trkpt lat="50.150055"
    lon="8.314236"><ele>339.2</ele><time>2020-05-14T07:54:41Z</time></trkpt>

    <trkpt lat="50.149843"
    lon="8.315091"><ele>355.0</ele><time>2020-05-14T07:54:44Z</time></trkpt>

    <trkpt lat="50.149758"
    lon="8.31553"><ele>355.0</ele><time>2020-05-14T07:54:45Z</time></trkpt>

    <trkpt lat="50.149689"
    lon="8.315975"><ele>355.4</ele><time>2020-05-14T07:54:46Z</time></trkpt>

    <trkpt lat="50.149352"
    lon="8.318613"><ele>355.8</ele><time>2020-05-14T07:54:53Z</time></trkpt>

    <trkpt lat="50.149214"
    lon="8.319409"><ele>354.2</ele><time>2020-05-14T07:54:55Z</time></trkpt>

    <trkpt lat="50.149116"
    lon="8.31985"><ele>363.6</ele><time>2020-05-14T07:54:57Z</time></trkpt>

    <trkpt lat="50.148991"
    lon="8.32032"><ele>360.4</ele><time>2020-05-14T07:54:58Z</time></trkpt>

    <trkpt lat="50.148846"
    lon="8.320784"><ele>360.4</ele><time>2020-05-14T07:54:59Z</time></trkpt>

    <trkpt lat="50.14854"
    lon="8.321577"><ele>356.6</ele><time>2020-05-14T07:55:02Z</time></trkpt>

    <trkpt lat="50.14834"
    lon="8.322006"><ele>352.4</ele><time>2020-05-14T07:55:03Z</time></trkpt>

    <trkpt lat="50.147954"
    lon="8.322718"><ele>349.2</ele><time>2020-05-14T07:55:05Z</time></trkpt>

    <trkpt lat="50.147773"
    lon="8.322994"><ele>349.2</ele><time>2020-05-14T07:55:07Z</time></trkpt>

    <trkpt lat="50.147427"
    lon="8.323457"><ele>345.8</ele><time>2020-05-14T07:55:08Z</time></trkpt>

    <trkpt lat="50.147227"
    lon="8.323692"><ele>345.8</ele><time>2020-05-14T07:55:09Z</time></trkpt>

    <trkpt lat="50.145357"
    lon="8.325798"><ele>337.2</ele><time>2020-05-14T07:55:19Z</time></trkpt>

    <trkpt lat="50.142855"
    lon="8.328564"><ele>315.0</ele><time>2020-05-14T07:55:31Z</time></trkpt>

    <trkpt lat="50.142352"
    lon="8.329112"><ele>310.2</ele><time>2020-05-14T07:55:34Z</time></trkpt>

    <trkpt lat="50.141783"
    lon="8.32965"><ele>311.6</ele><time>2020-05-14T07:55:37Z</time></trkpt>

    <trkpt lat="50.141501"
    lon="8.329868"><ele>306.4</ele><time>2020-05-14T07:55:38Z</time></trkpt>

    <trkpt lat="50.128683"
    lon="8.338779"><ele>274.4</ele><time>2020-05-14T07:56:35Z</time></trkpt>

    <trkpt lat="50.128013"
    lon="8.339204"><ele>277.0</ele><time>2020-05-14T07:56:38Z</time></trkpt>

    <trkpt lat="50.126944"
    lon="8.339803"><ele>268.8</ele><time>2020-05-14T07:56:43Z</time></trkpt>

    <trkpt lat="50.125827"
    lon="8.340285"><ele>261.6</ele><time>2020-05-14T07:56:47Z</time></trkpt>

    <trkpt lat="50.125173"
    lon="8.340522"><ele>261.6</ele><time>2020-05-14T07:56:50Z</time></trkpt>

    <trkpt lat="50.124605"
    lon="8.340699"><ele>255.4</ele><time>2020-05-14T07:56:52Z</time></trkpt>

    <trkpt lat="50.123937"
    lon="8.340877"><ele>257.4</ele><time>2020-05-14T07:56:55Z</time></trkpt>

    <trkpt lat="50.122736"
    lon="8.341054"><ele>261.8</ele><time>2020-05-14T07:57:00Z</time></trkpt>

    <trkpt lat="50.122269"
    lon="8.341102"><ele>267.2</ele><time>2020-05-14T07:57:02Z</time></trkpt>

    <trkpt lat="50.119247"
    lon="8.341176"><ele>267.6</ele><time>2020-05-14T07:57:14Z</time></trkpt>

    <trkpt lat="50.118238"
    lon="8.341263"><ele>266.8</ele><time>2020-05-14T07:57:19Z</time></trkpt>

    <trkpt lat="50.117603"
    lon="8.341359"><ele>266.8</ele><time>2020-05-14T07:57:21Z</time></trkpt>

    <trkpt lat="50.116481"
    lon="8.341605"><ele>259.8</ele><time>2020-05-14T07:57:26Z</time></trkpt>

    <trkpt lat="50.115574"
    lon="8.34188"><ele>253.8</ele><time>2020-05-14T07:57:30Z</time></trkpt>

    <trkpt lat="50.115103"
    lon="8.342047"><ele>253.8</ele><time>2020-05-14T07:57:32Z</time></trkpt>

    <trkpt lat="50.114397"
    lon="8.342333"><ele>247.4</ele><time>2020-05-14T07:57:34Z</time></trkpt>

    <trkpt lat="50.11372"
    lon="8.342648"><ele>242.6</ele><time>2020-05-14T07:57:37Z</time></trkpt>

    <trkpt lat="50.112276"
    lon="8.34344"><ele>230.6</ele><time>2020-05-14T07:57:44Z</time></trkpt>

    <trkpt lat="50.091657"
    lon="8.354972"><ele>194.4</ele><time>2020-05-14T07:59:13Z</time></trkpt>

    <trkpt lat="50.089826"
    lon="8.356026"><ele>186.8</ele><time>2020-05-14T07:59:21Z</time></trkpt>

    <trkpt lat="50.088611"
    lon="8.356803"><ele>180.8</ele><time>2020-05-14T07:59:26Z</time></trkpt>

    <trkpt lat="50.087386"
    lon="8.357651"><ele>172.6</ele><time>2020-05-14T07:59:32Z</time></trkpt>

    <trkpt lat="50.07942"
    lon="8.363642"><ele>158.2</ele><time>2020-05-14T08:00:08Z</time></trkpt>

    <trkpt lat="50.078959"
    lon="8.364007"><ele>155.8</ele><time>2020-05-14T08:00:10Z</time></trkpt>

    <trkpt lat="50.078086"
    lon="8.364751"><ele>154.8</ele><time>2020-05-14T08:00:14Z</time></trkpt>

    <trkpt lat="50.076992"
    lon="8.36584"><ele>156.2</ele><time>2020-05-14T08:00:19Z</time></trkpt>

    <trkpt lat="50.076253"
    lon="8.36667"><ele>155.8</ele><time>2020-05-14T08:00:23Z</time></trkpt>

    <trkpt lat="50.070994"
    lon="8.373408"><ele>149.6</ele><time>2020-05-14T08:00:51Z</time></trkpt>

    <trkpt lat="50.069335"
    lon="8.375568"><ele>151.6</ele><time>2020-05-14T08:01:00Z</time></trkpt>

    <trkpt lat="50.068622"
    lon="8.376432"><ele>156.2</ele><time>2020-05-14T08:01:03Z</time></trkpt>

    <trkpt lat="50.068191"
    lon="8.376925"><ele>161.6</ele><time>2020-05-14T08:01:05Z</time></trkpt>

    <trkpt lat="50.067184"
    lon="8.377986"><ele>164.2</ele><time>2020-05-14T08:01:10Z</time></trkpt>

    <trkpt lat="50.066531"
    lon="8.37859"><ele>164.8</ele><time>2020-05-14T08:01:13Z</time></trkpt>

    <trkpt lat="50.062802"
    lon="8.381772"><ele>163.0</ele><time>2020-05-14T08:01:31Z</time></trkpt>

    <trkpt lat="50.059585"
    lon="8.384467"><ele>157.0</ele><time>2020-05-14T08:01:46Z</time></trkpt>

    <trkpt lat="50.059264"
    lon="8.384801"><ele>157.0</ele><time>2020-05-14T08:01:47Z</time></trkpt>

    <trkpt lat="50.053468"
    lon="8.389702"><ele>155.2</ele><time>2020-05-14T08:02:14Z</time></trkpt>

    <trkpt lat="50.051073"
    lon="8.391771"><ele>153.6</ele><time>2020-05-14T08:02:25Z</time></trkpt>

    <trkpt lat="50.050699"
    lon="8.392129"><ele>153.0</ele><time>2020-05-14T08:02:27Z</time></trkpt>

    <trkpt lat="50.049837"
    lon="8.393121"><ele>152.2</ele><time>2020-05-14T08:02:31Z</time></trkpt>

    <trkpt lat="50.049504"
    lon="8.39355"><ele>152.6</ele><time>2020-05-14T08:02:33Z</time></trkpt>

    <trkpt lat="50.048978"
    lon="8.394287"><ele>151.2</ele><time>2020-05-14T08:02:36Z</time></trkpt>

    <trkpt lat="50.048511"
    lon="8.395008"><ele>151.0</ele><time>2020-05-14T08:02:39Z</time></trkpt>

    <trkpt lat="50.048106"
    lon="8.395693"><ele>150.6</ele><time>2020-05-14T08:02:41Z</time></trkpt>

    <trkpt lat="50.047278"
    lon="8.397278"><ele>150.2</ele><time>2020-05-14T08:02:47Z</time></trkpt>

    <trkpt lat="50.046909"
    lon="8.398118"><ele>149.6</ele><time>2020-05-14T08:02:49Z</time></trkpt>

    <trkpt lat="50.046554"
    lon="8.399035"><ele>148.6</ele><time>2020-05-14T08:02:52Z</time></trkpt>

    <trkpt lat="50.045922"
    lon="8.400987"><ele>147.6</ele><time>2020-05-14T08:02:58Z</time></trkpt>

    <trkpt lat="50.040716"
    lon="8.418356"><ele>143.2</ele><time>2020-05-14T08:03:48Z</time></trkpt>

    <trkpt lat="50.040039"
    lon="8.420752"><ele>141.4</ele><time>2020-05-14T08:03:55Z</time></trkpt>

    <trkpt lat="50.037679"
    lon="8.429674"><ele>121.0</ele><time>2020-05-14T08:04:20Z</time></trkpt>

    <trkpt lat="50.03546"
    lon="8.438318"><ele>98.6</ele><time>2020-05-14T08:04:44Z</time></trkpt>

    <trkpt lat="50.03281"
    lon="8.448448"><ele>93.4</ele><time>2020-05-14T08:05:13Z</time></trkpt>

    <trkpt lat="50.031174"
    lon="8.454791"><ele>93.4</ele><time>2020-05-14T08:05:31Z</time></trkpt>

    <trkpt lat="50.030313"
    lon="8.458317"><ele>92.4</ele><time>2020-05-14T08:05:41Z</time></trkpt>

    <trkpt lat="50.029924"
    lon="8.460098"><ele>90.0</ele><time>2020-05-14T08:05:46Z</time></trkpt>

    <trkpt lat="50.02924"
    lon="8.463374"><ele>94.0</ele><time>2020-05-14T08:05:55Z</time></trkpt>

    <trkpt lat="50.026067"
    lon="8.479417"><ele>98.4</ele><time>2020-05-14T08:06:39Z</time></trkpt>

    <trkpt lat="50.025921"
    lon="8.480248"><ele>99.0</ele><time>2020-05-14T08:06:41Z</time></trkpt>

    <trkpt lat="50.02574"
    lon="8.481588"><ele>102.4</ele><time>2020-05-14T08:06:45Z</time></trkpt>

    <trkpt lat="50.025621"
    lon="8.482865"><ele>100.4</ele><time>2020-05-14T08:06:48Z</time></trkpt>

    <trkpt lat="50.025576"
    lon="8.483604"><ele>101.0</ele><time>2020-05-14T08:06:50Z</time></trkpt>

    <trkpt lat="50.025532"
    lon="8.485045"><ele>102.6</ele><time>2020-05-14T08:06:54Z</time></trkpt>

    <trkpt lat="50.025539"
    lon="8.485855"><ele>103.6</ele><time>2020-05-14T08:06:56Z</time></trkpt>

    <trkpt lat="50.025564"
    lon="8.486689"><ele>104.6</ele><time>2020-05-14T08:06:58Z</time></trkpt>

    <trkpt lat="50.025611"
    lon="8.487515"><ele>104.6</ele><time>2020-05-14T08:07:00Z</time></trkpt>

    <trkpt lat="50.025663"
    lon="8.488172"><ele>104.6</ele><time>2020-05-14T08:07:02Z</time></trkpt>

    <trkpt lat="50.025843"
    lon="8.48986"><ele>101.2</ele><time>2020-05-14T08:07:06Z</time></trkpt>

    <trkpt lat="50.026121"
    lon="8.491398"><ele>100.8</ele><time>2020-05-14T08:07:11Z</time></trkpt>

    <trkpt lat="50.026392"
    lon="8.492677"><ele>99.6</ele><time>2020-05-14T08:07:14Z</time></trkpt>

    <trkpt lat="50.026683"
    lon="8.493758"><ele>99.6</ele><time>2020-05-14T08:07:17Z</time></trkpt>

    <trkpt lat="50.026982"
    lon="8.494768"><ele>101.2</ele><time>2020-05-14T08:07:20Z</time></trkpt>

    <trkpt lat="50.027294"
    lon="8.495666"><ele>102.6</ele><time>2020-05-14T08:07:23Z</time></trkpt>

    <trkpt lat="50.028037"
    lon="8.497557"><ele>99.8</ele><time>2020-05-14T08:07:29Z</time></trkpt>

    <trkpt lat="50.030263"
    lon="8.503096"><ele>96.4</ele><time>2020-05-14T08:07:46Z</time></trkpt>

    <trkpt lat="50.035087"
    lon="8.515185"><ele>102.4</ele><time>2020-05-14T08:08:23Z</time></trkpt>

    <trkpt lat="50.035665"
    lon="8.516668"><ele>106.2</ele><time>2020-05-14T08:08:28Z</time></trkpt>

    <trkpt lat="50.036911"
    lon="8.51967"><ele>101.8</ele><time>2020-05-14T08:08:37Z</time></trkpt>

    <trkpt lat="50.038272"
    lon="8.523052"><ele>100.2</ele><time>2020-05-14T08:08:47Z</time></trkpt>

    <trkpt lat="50.039032"
    lon="8.525002"><ele>102.2</ele><time>2020-05-14T08:08:53Z</time></trkpt>

    <trkpt lat="50.040739"
    lon="8.529241"><ele>103.2</ele><time>2020-05-14T08:09:06Z</time></trkpt>

    <trkpt lat="50.04168"
    lon="8.531666"><ele>101.8</ele><time>2020-05-14T08:09:14Z</time></trkpt>

    <trkpt lat="50.04607"
    lon="8.542625"><ele>104.4</ele><time>2020-05-14T08:09:48Z</time></trkpt>

    <trkpt lat="50.046202"
    lon="8.543125"><ele>104.4</ele><time>2020-05-14T08:09:51Z</time></trkpt>

    <trkpt lat="50.046349"
    lon="8.543897"><ele>104.6</ele><time>2020-05-14T08:09:54Z</time></trkpt>

    <trkpt lat="50.046477"
    lon="8.544806"><ele>105.0</ele><time>2020-05-14T08:09:59Z</time></trkpt>

    <trkpt lat="50.046595"
    lon="8.545194"><ele>104.6</ele><time>2020-05-14T08:10:01Z</time></trkpt>

    <trkpt lat="50.04669"
    lon="8.545389"><ele>104.2</ele><time>2020-05-14T08:10:02Z</time></trkpt>

    <trkpt lat="50.046783"
    lon="8.545532"><ele>104.2</ele><time>2020-05-14T08:10:03Z</time></trkpt>

    <trkpt lat="50.047046"
    lon="8.545819"><ele>104.2</ele><time>2020-05-14T08:10:05Z</time></trkpt>

    <trkpt lat="50.047161"
    lon="8.545887"><ele>105.0</ele><time>2020-05-14T08:10:06Z</time></trkpt>

    <trkpt lat="50.047612"
    lon="8.546077"><ele>104.2</ele><time>2020-05-14T08:10:09Z</time></trkpt>

    <trkpt lat="50.047785"
    lon="8.546181"><ele>104.2</ele><time>2020-05-14T08:10:10Z</time></trkpt>

    <trkpt lat="50.048017"
    lon="8.546432"><ele>104.2</ele><time>2020-05-14T08:10:12Z</time></trkpt>

    <trkpt lat="50.048171"
    lon="8.546684"><ele>104.8</ele><time>2020-05-14T08:10:14Z</time></trkpt>

    <trkpt lat="50.048228"
    lon="8.546819"><ele>104.8</ele><time>2020-05-14T08:10:15Z</time></trkpt>

    <trkpt lat="50.048295"
    lon="8.547003"><ele>104.8</ele><time>2020-05-14T08:10:16Z</time></trkpt>

    <trkpt lat="50.048525"
    lon="8.547889"><ele>104.0</ele><time>2020-05-14T08:10:20Z</time></trkpt>

    <trkpt lat="50.048694"
    lon="8.548461"><ele>105.0</ele><time>2020-05-14T08:10:23Z</time></trkpt>

    <trkpt lat="50.049133"
    lon="8.549535"><ele>105.2</ele><time>2020-05-14T08:10:29Z</time></trkpt>

    <trkpt lat="50.049743"
    lon="8.551139"><ele>106.8</ele><time>2020-05-14T08:10:37Z</time></trkpt>

    <trkpt lat="50.050311"
    lon="8.552821"><ele>107.0</ele><time>2020-05-14T08:10:46Z</time></trkpt>

    <trkpt lat="50.050544"
    lon="8.553587"><ele>107.0</ele><time>2020-05-14T08:10:50Z</time></trkpt>

    <trkpt lat="50.051121"
    lon="8.555661"><ele>109.0</ele><time>2020-05-14T08:11:00Z</time></trkpt>

    <trkpt lat="50.051495"
    lon="8.557297"><ele>109.8</ele><time>2020-05-14T08:11:08Z</time></trkpt>

    <trkpt lat="50.051659"
    lon="8.558103"><ele>110.4</ele><time>2020-05-14T08:11:12Z</time></trkpt>

    <trkpt lat="50.051902"
    lon="8.559404"><ele>112.2</ele><time>2020-05-14T08:11:18Z</time></trkpt>

    <trkpt lat="50.052077"
    lon="8.560452"><ele>111.0</ele><time>2020-05-14T08:11:23Z</time></trkpt>

    <trkpt lat="50.053144"
    lon="8.568315"><ele>113.6</ele><time>2020-05-14T08:11:59Z</time></trkpt>

    <trkpt lat="50.053892"
    lon="8.573383"><ele>112.2</ele><time>2020-05-14T08:12:23Z</time></trkpt>

    <trkpt lat="50.05439"
    lon="8.576323"><ele>111.6</ele><time>2020-05-14T08:12:37Z</time></trkpt>

    <trkpt lat="50.055123"
    lon="8.580298"><ele>112.0</ele><time>2020-05-14T08:12:55Z</time></trkpt>

    <trkpt lat="50.055675"
    lon="8.582787"><ele>111.2</ele><time>2020-05-14T08:13:07Z</time></trkpt>

    <trkpt lat="50.057399"
    lon="8.590146"><ele>115.2</ele><time>2020-05-14T08:13:43Z</time></trkpt>

    <trkpt lat="50.057672"
    lon="8.591443"><ele>117.8</ele><time>2020-05-14T08:13:49Z</time></trkpt>

    <trkpt lat="50.057792"
    lon="8.592311"><ele>118.6</ele><time>2020-05-14T08:13:53Z</time></trkpt>

    <trkpt lat="50.057852"
    lon="8.59291"><ele>119.0</ele><time>2020-05-14T08:13:56Z</time></trkpt>

    <trkpt lat="50.057898"
    lon="8.593689"><ele>119.2</ele><time>2020-05-14T08:13:59Z</time></trkpt>

    <trkpt lat="50.057947"
    lon="8.59565"><ele>119.6</ele><time>2020-05-14T08:14:08Z</time></trkpt>

    <trkpt lat="50.057895"
    lon="8.597773"><ele>118.2</ele><time>2020-05-14T08:14:18Z</time></trkpt>

    <trkpt lat="50.057767"
    lon="8.599924"><ele>121.0</ele><time>2020-05-14T08:14:28Z</time></trkpt>

    <trkpt lat="50.05756"
    lon="8.602433"><ele>119.4</ele><time>2020-05-14T08:14:39Z</time></trkpt>

    <trkpt lat="50.057468"
    lon="8.603323"><ele>117.2</ele><time>2020-05-14T08:14:43Z</time></trkpt>

    <trkpt lat="50.057078"
    lon="8.606919"><ele>114.0</ele><time>2020-05-14T08:15:00Z</time></trkpt>

    <trkpt lat="50.056179"
    lon="8.614918"><ele>118.4</ele><time>2020-05-14T08:15:37Z</time></trkpt>

    <trkpt lat="50.055974"
    lon="8.616937"><ele>115.6</ele><time>2020-05-14T08:15:46Z</time></trkpt>

    <trkpt lat="50.055686"
    lon="8.620612"><ele>122.4</ele><time>2020-05-14T08:16:03Z</time></trkpt>

    <trkpt lat="50.055401"
    lon="8.6258"><ele>120.4</ele><time>2020-05-14T08:16:27Z</time></trkpt>

    <trkpt lat="50.055282"
    lon="8.628349"><ele>120.8</ele><time>2020-05-14T08:16:38Z</time></trkpt>

    <trkpt lat="50.055261"
    lon="8.629756"><ele>120.2</ele><time>2020-05-14T08:16:45Z</time></trkpt>

    <trkpt lat="50.055295"
    lon="8.631085"><ele>117.6</ele><time>2020-05-14T08:16:51Z</time></trkpt>

    <trkpt lat="50.055355"
    lon="8.631908"><ele>116.2</ele><time>2020-05-14T08:16:54Z</time></trkpt>

    <trkpt lat="50.055533"
    lon="8.633268"><ele>115.2</ele><time>2020-05-14T08:17:01Z</time></trkpt>

    <trkpt lat="50.055648"
    lon="8.633989"><ele>114.2</ele><time>2020-05-14T08:17:04Z</time></trkpt>

    <trkpt lat="50.055812"
    lon="8.634862"><ele>113.4</ele><time>2020-05-14T08:17:08Z</time></trkpt>

    <trkpt lat="50.055922"
    lon="8.635353"><ele>115.4</ele><time>2020-05-14T08:17:11Z</time></trkpt>

    <trkpt lat="50.056175"
    lon="8.636324"><ele>113.6</ele><time>2020-05-14T08:17:15Z</time></trkpt>

    <trkpt lat="50.056459"
    lon="8.637256"><ele>112.4</ele><time>2020-05-14T08:17:20Z</time></trkpt>

    <trkpt lat="50.057517"
    lon="8.640244"><ele>115.2</ele><time>2020-05-14T08:17:35Z</time></trkpt>

    <trkpt lat="50.059164"
    lon="8.64477"><ele>114.0</ele><time>2020-05-14T08:17:59Z</time></trkpt>

    <trkpt lat="50.059651"
    lon="8.645883"><ele>113.2</ele><time>2020-05-14T08:18:05Z</time></trkpt>

    <trkpt lat="50.059997"
    lon="8.646582"><ele>113.2</ele><time>2020-05-14T08:18:09Z</time></trkpt>

    <trkpt lat="50.060264"
    lon="8.647046"><ele>111.2</ele><time>2020-05-14T08:18:12Z</time></trkpt>

    <trkpt lat="50.060551"
    lon="8.647498"><ele>111.2</ele><time>2020-05-14T08:18:15Z</time></trkpt>

    <trkpt lat="50.060776"
    lon="8.647823"><ele>111.4</ele><time>2020-05-14T08:18:17Z</time></trkpt>

    <trkpt lat="50.06111"
    lon="8.648257"><ele>111.2</ele><time>2020-05-14T08:18:20Z</time></trkpt>

    <trkpt lat="50.061636"
    lon="8.648858"><ele>112.0</ele><time>2020-05-14T08:18:25Z</time></trkpt>

    <trkpt lat="50.062173"
    lon="8.649378"><ele>114.6</ele><time>2020-05-14T08:18:29Z</time></trkpt>

    <trkpt lat="50.062865"
    lon="8.649945"><ele>115.6</ele><time>2020-05-14T08:18:35Z</time></trkpt>

    <trkpt lat="50.063465"
    lon="8.650323"><ele>117.4</ele><time>2020-05-14T08:18:39Z</time></trkpt>

    <trkpt lat="50.06381"
    lon="8.6505"><ele>117.4</ele><time>2020-05-14T08:18:42Z</time></trkpt>

    <trkpt lat="50.064361"
    lon="8.650731"><ele>118.6</ele><time>2020-05-14T08:18:46Z</time></trkpt>

    <trkpt lat="50.064965"
    lon="8.650918"><ele>119.4</ele><time>2020-05-14T08:18:50Z</time></trkpt>

    <trkpt lat="50.065938"
    lon="8.651147"><ele>117.0</ele><time>2020-05-14T08:18:57Z</time></trkpt>

    <trkpt lat="50.067589"
    lon="8.651415"><ele>115.6</ele><time>2020-05-14T08:19:09Z</time></trkpt>

    <trkpt lat="50.068296"
    lon="8.651576"><ele>115.6</ele><time>2020-05-14T08:19:14Z</time></trkpt>

    <trkpt lat="50.068995"
    lon="8.651767"><ele>116.0</ele><time>2020-05-14T08:19:19Z</time></trkpt>

    <trkpt lat="50.075268"
    lon="8.65377"><ele>116.6</ele><time>2020-05-14T08:20:04Z</time></trkpt>

    <trkpt lat="50.076791"
    lon="8.654279"><ele>116.6</ele><time>2020-05-14T08:20:15Z</time></trkpt>

    <trkpt lat="50.076993"
    lon="8.654425"><ele>116.6</ele><time>2020-05-14T08:20:17Z</time></trkpt>

    <trkpt lat="50.07715"
    lon="8.654591"><ele>116.6</ele><time>2020-05-14T08:20:18Z</time></trkpt>

    <trkpt lat="50.077503"
    lon="8.655207"><ele>114.8</ele><time>2020-05-14T08:20:22Z</time></trkpt>

    <trkpt lat="50.07801"
    lon="8.656181"><ele>117.0</ele><time>2020-05-14T08:20:28Z</time></trkpt>

    <trkpt lat="50.078552"
    lon="8.657127"><ele>116.8</ele><time>2020-05-14T08:20:33Z</time></trkpt>

    <trkpt lat="50.078889"
    lon="8.657417"><ele>116.8</ele><time>2020-05-14T08:20:36Z</time></trkpt>

    <trkpt lat="50.07931"
    lon="8.657539"><ele>116.2</ele><time>2020-05-14T08:20:39Z</time></trkpt>

    <trkpt lat="50.080274"
    lon="8.657184"><ele>112.6</ele><time>2020-05-14T08:20:46Z</time></trkpt>

    <trkpt lat="50.080685"
    lon="8.657002"><ele>112.6</ele><time>2020-05-14T08:20:49Z</time></trkpt>

    <trkpt lat="50.081214"
    lon="8.656838"><ele>110.0</ele><time>2020-05-14T08:20:53Z</time></trkpt>

    <trkpt lat="50.082042"
    lon="8.656671"><ele>107.8</ele><time>2020-05-14T08:20:59Z</time></trkpt>

    <trkpt lat="50.082679"
    lon="8.656826"><ele>106.2</ele><time>2020-05-14T08:21:04Z</time></trkpt>

    <trkpt lat="50.088142"
    lon="8.659695"><ele>105.0</ele><time>2020-05-14T08:21:44Z</time></trkpt>

    <trkpt lat="50.088471"
    lon="8.659913"><ele>104.8</ele><time>2020-05-14T08:21:47Z</time></trkpt>

    <trkpt lat="50.088752"
    lon="8.660149"><ele>105.4</ele><time>2020-05-14T08:21:49Z</time></trkpt>

    <trkpt lat="50.088965"
    lon="8.660396"><ele>105.4</ele><time>2020-05-14T08:21:51Z</time></trkpt>

    <trkpt lat="50.091675"
    lon="8.663717"><ele>101.0</ele><time>2020-05-14T08:22:15Z</time></trkpt>

    <trkpt lat="50.09297"
    lon="8.665228"><ele>100.8</ele><time>2020-05-14T08:22:27Z</time></trkpt>

    <trkpt lat="50.096207"
    lon="8.669132"><ele>101.8</ele><time>2020-05-14T08:22:56Z</time></trkpt>

    <trkpt lat="50.096896"
    lon="8.670016"><ele>101.6</ele><time>2020-05-14T08:23:02Z</time></trkpt>

    <trkpt lat="50.097036"
    lon="8.670269"><ele>101.6</ele><time>2020-05-14T08:23:04Z</time></trkpt>

    <trkpt lat="50.097506"
    lon="8.670877"><ele>101.6</ele><time>2020-05-14T08:23:08Z</time></trkpt>

    <trkpt lat="50.09775"
    lon="8.671152"><ele>101.6</ele><time>2020-05-14T08:23:10Z</time></trkpt>

    <trkpt lat="50.098902"
    lon="8.672338"><ele>101.6</ele><time>2020-05-14T08:23:20Z</time></trkpt>

    <trkpt lat="50.1012"
    lon="8.674834"><ele>103.4</ele><time>2020-05-14T08:23:40Z</time></trkpt>

    <trkpt lat="50.101264"
    lon="8.674918"><ele>103.4</ele><time>2020-05-14T08:23:40Z</time></trkpt>

    <trkpt lat="50.101369"
    lon="8.675119"><ele>102.6</ele><time>2020-05-14T08:23:41Z</time></trkpt>

    <trkpt lat="50.101717"
    lon="8.675991"><ele>101.6</ele><time>2020-05-14T08:23:46Z</time></trkpt>

    <trkpt lat="50.101794"
    lon="8.676119"><ele>101.6</ele><time>2020-05-14T08:23:47Z</time></trkpt>

    <trkpt lat="50.102067"
    lon="8.676298"><ele>101.6</ele><time>2020-05-14T08:23:49Z</time></trkpt>

    <trkpt lat="50.102332"
    lon="8.676506"><ele>101.6</ele><time>2020-05-14T08:23:53Z</time></trkpt>

    <trkpt lat="50.103835"
    lon="8.678321"><ele>105.8</ele><time>2020-05-14T08:24:18Z</time></trkpt>

    <trkpt lat="50.103978"
    lon="8.678455"><ele>105.8</ele><time>2020-05-14T08:24:20Z</time></trkpt>

    <trkpt lat="50.104107"
    lon="8.67866"><ele>105.8</ele><time>2020-05-14T08:24:23Z</time></trkpt>

    <trkpt lat="50.104255"
    lon="8.678793"><ele>106.0</ele><time>2020-05-14T08:24:25Z</time></trkpt>

    <trkpt lat="50.105488"
    lon="8.677719"><ele>103.2</ele><time>2020-05-14T08:24:43Z</time></trkpt>

    <trkpt lat="50.107383"
    lon="8.675869"><ele>96.4</ele><time>2020-05-14T08:25:13Z</time></trkpt>

    <trkpt lat="50.107653"
    lon="8.675721"><ele>107.8</ele><time>2020-05-14T08:25:17Z</time></trkpt>

    <trkpt lat="50.108084"
    lon="8.675393"><ele>107.8</ele><time>2020-05-14T08:25:23Z</time></trkpt>

    <trkpt lat="50.108712"
    lon="8.675043"><ele>110.2</ele><time>2020-05-14T08:25:32Z</time></trkpt>

    <trkpt lat="50.109093"
    lon="8.674972"><ele>109.2</ele><time>2020-05-14T08:25:38Z</time></trkpt>

    <trkpt lat="50.109155"
    lon="8.675008"><ele>110.2</ele><time>2020-05-14T08:25:38Z</time></trkpt>

    <trkpt lat="50.109186"
    lon="8.675055"><ele>110.4</ele><time>2020-05-14T08:25:39Z</time></trkpt>

    <trkpt lat="50.109249"
    lon="8.67538"><ele>110.4</ele><time>2020-05-14T08:25:42Z</time></trkpt>

    <trkpt lat="50.109291"
    lon="8.675691"><ele>110.4</ele><time>2020-05-14T08:25:45Z</time></trkpt>

    <trkpt lat="50.109483"
    lon="8.676697"><ele>107.2</ele><time>2020-05-14T08:25:54Z</time></trkpt>

    <trkpt lat="50.109658"
    lon="8.677422"><ele>107.2</ele><time>2020-05-14T08:26:01Z</time></trkpt>

    <trkpt lat="50.109764"
    lon="8.677565"><ele>104.0</ele><time>2020-05-14T08:26:03Z</time></trkpt>

    <trkpt lat="50.109843"
    lon="8.677631"><ele>104.0</ele><time>2020-05-14T08:26:05Z</time></trkpt>

    <trkpt lat="50.110156"
    lon="8.678244"><ele>105.6</ele><time>2020-05-14T08:26:12Z</time></trkpt>

    <trkpt lat="50.110323"
    lon="8.678682"><ele>103.2</ele><time>2020-05-14T08:26:16Z</time></trkpt>

    <trkpt lat="50.110396"
    lon="8.678928"><ele>103.2</ele><time>2020-05-14T08:26:19Z</time></trkpt>

    <trkpt lat="50.110475"
    lon="8.679372"><ele>103.8</ele><time>2020-05-14T08:26:23Z</time></trkpt>

    <trkpt lat="50.110537"
    lon="8.68012"><ele>104.8</ele><time>2020-05-14T08:26:30Z</time></trkpt>

    <trkpt lat="50.110573"
    lon="8.680308"><ele>104.8</ele><time>2020-05-14T08:26:31Z</time></trkpt>

    <trkpt lat="50.110767"
    lon="8.681018"><ele>104.6</ele><time>2020-05-14T08:26:38Z</time></trkpt>

    <trkpt lat="50.110814"
    lon="8.681297"><ele>104.6</ele><time>2020-05-14T08:26:41Z</time></trkpt>

    <trkpt lat="50.110887"
    lon="8.681986"><ele>106.0</ele><time>2020-05-14T08:26:47Z</time></trkpt>

    </trkseg>

    </trk>

    </gpx>
  route.gpx: |
    <?xml version="1.0" encoding="UTF-8"?>
    <gpx version="1.0" xmlns="http://www.topografix.com/GPX/1/1">
      <metadata>
      <name>Example gpx</name>
      </metadata>
      <wpt lat="46.57638889" lon="8.89263889">
        <ele>2372</ele>
        <name>LAGORETICO</name>
      </wpt>
      <trk><name>Example gpx</name><number>1</number><trkseg>
        <trkpt lat="46.57608333" lon="8.89241667"><ele>2376</ele><time>2007-10-14T10:09:57Z</time></trkpt>
        <trkpt lat="46.57619444" lon="8.89252778"><ele>2375</ele><time>2007-10-14T10:10:52Z</time></trkpt>
        <trkpt lat="46.57641667" lon="8.89266667"><ele>2372</ele><time>2007-10-14T10:12:39Z</time></trkpt>
        <trkpt lat="46.57650000" lon="8.89280556"><ele>2373</ele><time>2007-10-14T10:13:12Z</time></trkpt>
        <trkpt lat="46.57638889" lon="8.89302778"><ele>2374</ele><time>2007-10-14T10:13:20Z</time></trkpt>
        <trkpt lat="46.57652778" lon="8.89322222"><ele>2375</ele><time>2007-10-14T10:13:48Z</time></trkpt>
        <trkpt lat="46.57661111" lon="8.89344444"><ele>2376</ele><time>2007-10-14T10:14:08Z</time></trkpt>
      </trkseg></trk>
    </gpx>
---
# Source: bobbycar-core-apps/templates/dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dashboard-config
  namespace: test
data:
  config.json: |-
    {
        "GOOGLE_API_KEY": "{{ .googleapikey }}",
        "BOBBYCAR_API_KEY": "replaceme",
        "SSE_ENDPOINT": "",
        "CAR_EVENTS_ENDPOINT": "ws://dashboard-streaming-test.test.cluster.domain.com/api/carevents?sendToAll=true",
        "CAR_METRICS_ENDPOINT": "ws://dashboard-streaming-test.test.cluster.domain.com/api/carmetrics?sendToAll=true",
        "CAR_ZONECHANGE_ENDPOINT": "ws://dashboard-streaming-test.test.cluster.domain.com/api/zonechange?sendToAll=true",
        "CACHE_ENDPOINT": "http://cache-service-test.test.cluster.domain.com",
        "CAR_ENDPOINT": "http://car-simulator-test.test.cluster.domain.com",
        "HDPP_ENDPOINT": "http://ntt-stream-hdpp.apps.ocp4.rhlab.de/playlist.m3u8"
    }
---
# Source: bobbycar-core-apps/templates/dashboard-streaming-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: dashboard-streaming-config
  namespace: test
data:
  kafka.bootstrap.servers: bobbycar-cluster-kafka-bootstrap:9092
  mp.messaging.incoming.bobbycar-gps.broadcast: 'true'
  mp.messaging.incoming.bobbycar-gps.topic: bobbycar-gps
  mp.messaging.incoming.bobbycar-metrics.broadcast: 'true'
  mp.messaging.incoming.bobbycar-metrics.topic: bobbycar-metrics
  mp.messaging.incoming.bobbycar-zonechange.broadcast: 'true'
  mp.messaging.incoming.bobbycar-zonechange.topic: bobbycar-zonechange
---
# Source: bobbycar-core-apps/templates/kafka2datagrid-view-zones-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: view-zones
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - bobbycar.redhat.com
    resources:
      - '*'
---
# Source: bobbycar-core-apps/templates/kafka2datagrid-sa-rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: bobbycar-view-default
subjects:
  - kind: ServiceAccount
    name: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: view-zones
---
# Source: bobbycar-core-apps/templates/cacheService-svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: cache-service
  labels:
    camel.apache.org/generation: '1'
    camel.apache.org/integration: cache-service
    camel.apache.org/service.type: user
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9080
  selector:
    camel.apache.org/integration: cache-service
  type: ClusterIP
  sessionAffinity: None
---
# Source: bobbycar-core-apps/templates/car-simulator-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: car-simulator
  name: car-simulator
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: car-simulator
    deploymentconfig: car-simulator
  sessionAffinity: None
  type: ClusterIP
---
# Source: bobbycar-core-apps/templates/dashboard-streaming-svc.yaml
kind: Service
apiVersion: v1
metadata:
  name: dashboard-streaming
  namespace: test
  labels:
    app: dashboard-streaming
    app.kubernetes.io/component: dashboard-streaming
    app.kubernetes.io/instance: dashboard-streaming
    app.kubernetes.io/name: dashboard-streaming
spec:
  ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
  selector:
    app: dashboard-streaming
---
# Source: bobbycar-core-apps/templates/dashboard-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: dashboard
  namespace: test
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: dashboard
    deploymentconfig: dashboard
  sessionAffinity: None
  type: ClusterIP
---
# Source: bobbycar-core-apps/templates/dashboard-streaming-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: dashboard-streaming
  namespace: test
  labels:
    app.kubernetes.io/part-of: Bobbycar
    app: dashboard-streaming
    app.kubernetes.io/component: dashboard-streaming
    app.kubernetes.io/instance: dashboard-streaming
    app.kubernetes.io/name: dashboard-streaming
    app.openshift.io/runtime: quarkus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashboard-streaming
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dashboard-streaming
    spec:
      containers:
        - name: dashboard-streaming
          image: quay.io/bobbycar/dashboard-streaming:native-1.0
          ports:
            - containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: dashboard-streaming-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
# Source: bobbycar-core-apps/templates/bobbycar-zone-cr.yaml
apiVersion: bobbycar.redhat.com/v1alpha1
kind: BobbycarZone
metadata:
  name: de-ffm-env
spec:
  name: "Frankfurt Environmental Zone"
  type: "circle"
  priority: 10
  position:
    lat: 50.1146997
    lng: 8.6185411
  radius: 5000
---
# Source: bobbycar-core-apps/templates/bobbycar-zone-idstein-cr.yaml
apiVersion: bobbycar.redhat.com/v1alpha1
kind: BobbycarZone
metadata:
  name: de-idstein-a3
spec:
  name: "Idstein A3"
  type: "circle"
  priority: 5
  position:
    lat: 50.19838330903354
    lng: 8.255592550250164
  radius: 800
---
# Source: bobbycar-core-apps/templates/bobbycar-zone-rw-cr.yaml
apiVersion: bobbycar.redhat.com/v1alpha1
kind: BobbycarZone
metadata:
  name: de-ffm-airport
spec:
  name: "Frankfurt Airport"
  type: "circle"
  priority: 500
  position:
    lat: 50.02698418863608
    lng: 8.49455049723824
  radius: 1000
---
# Source: bobbycar-core-apps/templates/car-simulator-dc.yaml
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: car-simulator
    app.kubernetes.io/part-of: Bobbycar
  name: car-simulator
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentConfig: car-simulator
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: car-simulator
        deploymentConfig: car-simulator
      name: car-simulator
    spec:
      volumes:
        - name: config
          configMap:
            name: car-simulator-config
            defaultMode: 420
      containers:
      - name: car-simulator
        image: quay.io/bobbycar/car-simulator:1.1.1
        imagePullPolicy: Always
        volumeMounts:
            - name: config
              readOnly: true
              mountPath: /opt/routes
        env:
            - name: com.redhat.bobbycar.carsim.route
              value: '/opt/routes'
            - name: com.redhat.bobbycar.carsim.cars
              value: "20"
            - name: com.redhat.bobbycar.carsim.factor
              value: "3"
            - name: com.redhat.bobbycar.carsim.repeat
              value: "true"
            - name: quarkus.log.level
              value: 'INFO'
            - name: com.redhat.bobbycar.carsim.delay
              value: "1000"
            - name: mp.messaging.incoming.zonechange.type
              value: 'smallrye-mqtt'
            - name: mp.messaging.incoming.zonechange.topic
              value: "bobbycar/zonechange"
            - name: mp.messaging.incoming.zonechange.host
              value: 'bobbycar-amq-mqtt-all-0-svc'
            - name: mp.messaging.incoming.zonechange.port
              value: '61616'
            - name: com.redhat.bobbycar.carsim.datagrid.url
              value: 'http://cache-service-test.test.cluster.domain.com'
            - name: com.redhat.bobbycar.carsim.kafka.url
              value: 'http://bobbycar-test.test.cluster.domain.com'
            - name: mp.messaging.outgoing.enginemetrics.type
              value: 'smallrye-mqtt'
            - name: mp.messaging.outgoing.enginemetrics.topic
              value: "bobbycar/enginemetrics"
            - name: mp.messaging.outgoing.enginemetrics.host
              value: 'bobbycar-amq-mqtt-all-0-svc'
            - name: mp.messaging.outgoing.enginemetrics.port
              value: '61616'
            - name: mp.messaging.incoming.ota-updates.host
              value: 'bobbycar-amq-mqtt-all-0-svc'
            - name: mp.messaging.incoming.ota-updates.port
              value: '61616'
            - name: mp.messaging.incoming.ota-updates.topic
              value: 'ota/+'
            - name: mp.messaging.incoming.ota-updates.type
              value: 'smallrye-mqtt'
            - name: quarkus.http.cors
              value: 'true'
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        envFrom:
          - configMapRef: 
              name: car-simulator-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - type: ConfigChange
---
# Source: bobbycar-core-apps/templates/dashboard-dc.yaml
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app.kubernetes.io/part-of: Bobbycar
  name: dashboard
  namespace: test
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    component: dashboard
    deploymentconfig: dashboard
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        component: dashboard
        deploymentconfig: dashboard
    spec:
      containers:
      - image: quay.io/bobbycar/dashboard:1.0.1
        imagePullPolicy: Always
        name: dashboard
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
            - mountPath: /opt/app-root/src/conf/config.json
              name: dashboard-cfg-vol
              subPath: config.json
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - secret:
            defaultMode: 438
            secretName: dashboard-config
          name: dashboard-cfg-vol
  test: false
  triggers:
  - type: ConfigChange
---
# Source: bobbycar-core-apps/templates/dashboard-externalsecret.yaml
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dashboard-externalsecret
spec:
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore

  target:
    name: dashboard-config
    template:
      engineVersion: v2
      templateFrom:
      - configMap:
          # name of the configmap to pull in
          name: dashboard-config
          # here you define the keys that should be used as template
          items:
          - key: config.json
  data:
  - secretKey: googleapikey
    remoteRef:
      key: secret/data/hub/googleapi
      property: key
---
# Source: bobbycar-core-apps/templates/cacheService-integration.yaml
apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: cache-service
  labels:
    app.kubernetes.io/part-of: Bobbycar
spec:
  configuration:
    - type: secret
      value: cache-service-secret
  dependencies:
    - 'camel:netty-http'
    - 'camel:infinispan'
  profile: OpenShift
  sources:
    - content: "package com.redhat.bobbycar.routes;\nimport java.nio.charset.Charset;\nimport java.util.stream.Collectors;\n\nimport org.apache.camel.PropertyInject;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.component.infinispan.InfinispanComponent;\nimport org.apache.camel.component.infinispan.InfinispanConstants;\nimport org.apache.camel.component.infinispan.InfinispanOperation;\nimport org.apache.camel.model.rest.RestBindingMode;\nimport org.infinispan.client.hotrod.RemoteCache;\nimport org.infinispan.client.hotrod.RemoteCacheManager;\nimport org.infinispan.client.hotrod.configuration.*;\nimport org.infinispan.commons.marshall.StringMarshaller;\n\npublic class DatagridToRestRoute extends RouteBuilder {\n\t// private static final String PATH_TO_SERVICE_CA = \"/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt\";\n\t@PropertyInject(\"com.redhat.bobbycar.camelk.dg.host\")\n    private String datagridHost;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.user\", defaultValue = \"developer\")\n    private String datagridUsername;\n\t@PropertyInject(\"com.redhat.bobbycar.camelk.dg.password\")\n    private String datagridPassword;\n\tprivate RemoteCacheManager cacheManager;\n\tprivate RemoteCache<String, String> zonesCache;\n\tprivate RemoteCache<String, String> carsCache;\n\n\tprivate InfinispanComponent infinispan;\n\t\n\t@Override\n\tpublic void configure() throws Exception {\n\t\t\n\t\trestConfiguration().host(\"0.0.0.0\").port(9080).component(\"netty-http\")\n\t\t\t//.enableCORS(true)\n\t\t\t//.corsAllowCredentials(true)\n\t\t\t//.corsHeaderProperty(\"Access-Control-Allow-Origin\",\"*\")\n\t\t\t//.corsHeaderProperty(\"Access-Control-Allow-Headers\",\"Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization\")\n\t\t\t.bindingMode(RestBindingMode.json)\n\t\t\t.dataFormatProperty(\"prettyPrint\", \"true\")\n\t\t\t.contextPath(\"/\");\n\n\t\t// cacheManager = getContext().getRegistry().lookupByNameAndType(\"cacheManager\", RemoteCacheManager.class);\n\n\t\tConfiguration cacheConfig = createCacheConfig();\n\t\t//bindToRegistry(\"cacheManager\", cacheConfig);\n\t\tbindToRegistry(\"cacheContainerConfiguration\", cacheConfig);\n\t\tinitRemoteCache(cacheConfig);\n\t\tfrom(\"rest:get:cars\")\n\t\t\t.setHeader(\"Access-Control-Allow-Origin\",constant(\"*\"))\n\t\t\t.process(ex -> {\n\t\t\t\tex.getIn().setBody(\"[\" + carsCache.values().stream().collect(Collectors.joining(\",\")) + \"]\");\n\t\t\t});\n\t\tfrom(\"rest:get:cars/{carid}\")\n\t\t\t .setHeader(InfinispanConstants.OPERATION).constant(InfinispanOperation.GET)\n\t\t\t .setHeader(InfinispanConstants.KEY).expression(simple(\"${headers[carid]}\"))\n\t\t\t.to(\"infinispan://{{com.redhat.bobbycar.camelk.dg.car.cacheName}}?cacheContainerConfiguration=#cacheContainerConfiguration&hosts=bobbycar-dg\");\n\t\tfrom(\"rest:get:zones\")\n\t\t\t.setHeader(\"Access-Control-Allow-Origin\",constant(\"*\"))\n\t\t\t.process(ex -> {\n\t\t\t\tex.getIn().setBody(\"[\" + zonesCache.values().stream().collect(Collectors.joining(\",\")) + \"]\");\n\t\t\t});\t\n\t\tfrom(\"rest:get:zones/{zoneid}\")\t\n\t\t \t.setHeader(InfinispanConstants.OPERATION).constant(InfinispanOperation.GET)\n\t\t \t.setHeader(InfinispanConstants.KEY).expression(simple(\"${headers[zoneid]}\"))\n\t\t \t.to(\"infinispan://{{com.redhat.bobbycar.camelk.dg.zone.cacheName}}?cacheContainerConfiguration=#cacheContainerConfiguration\");\n\t}\n\n\tprivate void initRemoteCache(Configuration cacheConfig) {\n\t\tcacheManager = new RemoteCacheManager(cacheConfig);\n\t\tcacheManager.start();\n\t\tzonesCache = cacheManager.administration().getOrCreateCache(\"zones\", \"org.infinispan.DIST_ASYNC\");\n\t\tcarsCache = cacheManager.administration().getOrCreateCache(\"cars\", \"org.infinispan.DIST_ASYNC\");\n\t\t// cacheManager.start();\n\t}\n\t\n\tprivate Configuration createCacheConfig() {\n\t\tConfigurationBuilder hotRodBuilder = new ConfigurationBuilder();\n\t\treturn hotRodBuilder\n\t\t\t\t.addServer()\n\t        \t\t.host(datagridHost)\n\t\t\t\t\t.port(11222)\n\t        \t.marshaller(new StringMarshaller(Charset.defaultCharset()))\n\t        \t.clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE)\n\t        \t.security()\n\t        \t\t//.authentication()\n\t\t\t\t\t//\t.username(datagridUsername)\n\t\t\t\t\t//\t.password(datagridPassword)\n\t\t\t\t\t//\t.serverName(\"default\")\n\t\t\t\t\t//\t.saslQop(SaslQop.AUTH)\n\t\t\t\t\t//  .saslMechanism(\"DIGEST-MD5\")\n\t\t\t\t\t.ssl()\n\t\t\t\t\t\t.sniHostName(datagridHost)\n\t\t\t\t\t\t.trustStoreFileName(\"/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt\")\n\t\t\t\t\t\t.trustStoreType(\"pem\")\n        .build();\n\t}\n\t\n}\n"
      name: DatagridToRestRoute.java
  traits:
    service:
      configuration:
        enabled: false
---
# Source: bobbycar-core-apps/templates/kafka2datagrid-integration.yaml
apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: kafka2datagrid
  labels:
    app.kubernetes.io/part-of: Bobbycar
spec:
  configuration:
    - type: secret
      value: kafka2datagrid
  profile: OpenShift
  sources:
    - content: "package com.redhat.bobbycar.routes;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.nio.charset.Charset;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.security.cert.CertificateException;\nimport java.security.cert.CertificateFactory;\nimport java.security.cert.X509Certificate;\nimport java.util.List;\nimport java.util.Objects;\nimport java.util.Optional;\nimport java.util.stream.Collectors;\nimport java.util.stream.Stream;\n\nimport javax.net.ssl.X509TrustManager;\n\nimport org.apache.camel.Exchange;\nimport org.apache.camel.PropertyInject;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.component.infinispan.InfinispanConstants;\nimport org.apache.camel.component.infinispan.InfinispanOperation;\nimport org.apache.camel.component.netty.http.NettyHttpMessage;\nimport org.apache.camel.model.OnCompletionDefinition;\nimport org.apache.camel.model.rest.RestBindingMode;\nimport org.apache.camel.processor.aggregate.DefaultAggregateController;\nimport org.apache.camel.processor.aggregate.GroupedBodyAggregationStrategy;\nimport org.apache.camel.support.jsse.FilterParameters;\nimport org.apache.camel.support.jsse.SSLContextClientParameters;\nimport org.apache.camel.support.jsse.SSLContextParameters;\nimport org.apache.camel.support.jsse.TrustManagersParameters;\nimport org.infinispan.client.hotrod.RemoteCache;\nimport org.infinispan.client.hotrod.RemoteCacheManager;\nimport org.infinispan.client.hotrod.configuration.ClientIntelligence;\nimport org.infinispan.client.hotrod.configuration.Configuration;\nimport org.infinispan.client.hotrod.configuration.ConfigurationBuilder;\nimport org.infinispan.client.hotrod.configuration.SaslQop;\nimport org.infinispan.commons.marshall.StringMarshaller;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class KafkaToDatagridRoute extends RouteBuilder {\n\t\n\tprivate static final String ZONE_CHANGE_HEADER = \"zoneChange\";\n\tprivate static final String ZONE_PREV_HEADER = \"previousZone\";\n\tprivate static final String ZONE_NXT_HEADER = \"nextZone\";\n\tprivate static final String CAR_ID_HEADER = \"carid\";\n\tprivate static final String VIN_HEADER = \"vin\";\n\tprivate static final String CACHE_TEMPLATE = \"org.infinispan.DIST_ASYNC\";\n\tprivate static final String PATH_TO_SERVICE_CA = \"/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt\";\n\tprivate static final Logger LOGGER = LoggerFactory.getLogger(KafkaToDatagridRoute.class);\n\t@PropertyInject(\"com.redhat.bobbycar.camelk.dg.host\")\n    private String datagridHost;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.user\", defaultValue = \"developer\")\n    private String datagridUsername;\n\t@PropertyInject(\"com.redhat.bobbycar.camelk.dg.password\")\n    private String datagridPassword;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.aggregationInterval\", defaultValue = \"60000\")\n\tprivate long aggregationInterval;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.aggregationDistinct\", defaultValue = \"true\")\n    private boolean aggregationDistinct;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.car.cacheName\")\n\tprivate String carsCacheName;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.car.snapshot.cacheName\")\n\tprivate String carsnapshotCacheName;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.zone.cacheName\")\n\tprivate String zonesCacheName;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.ocp.api\")\n\tprivate String ocpAPIHost;\n\t@PropertyInject(value = \"com.redhat.bobbycar.camelk.dg.namespace\")\n\tprivate String namespace;\n\n\tprivate RemoteCacheManager cacheManager;\n\tprivate RemoteCache<String, String> zonesCache;\n\tprivate RemoteCache<String, String> carsCache;\n\tprivate RemoteCache<String, String> carsnapshotsCache; \n\tprivate ObjectMapper mapper = new ObjectMapper();\n\t\n\tpublic static class ZoneChangeEvent {\n\t\tprivate final String previousZoneId;\n\t\tprivate final String nextZoneId;\n\t\tprivate final String carId;\n\t\tprivate final String vin;\n\t\t\n\t\tpublic ZoneChangeEvent(String previousZoneId, String nextZoneId, String carId, String vin) {\n\t\t\tsuper();\n\t\t\tthis.previousZoneId = previousZoneId;\n\t\t\tthis.nextZoneId = nextZoneId;\n\t\t\tthis.carId = carId;\n\t\t\tthis.vin = vin;\n\t\t}\n\t\tpublic String getPreviousZoneId() {\n\t\t\treturn previousZoneId;\n\t\t}\n\t\tpublic String getNextZoneId() {\n\t\t\treturn nextZoneId;\n\t\t}\n\t\tpublic String getCarId() {\n\t\t\treturn carId;\n\t\t}\n\t\tpublic String getVin() {\n\t\t\treturn vin;\n\t\t}\n\t}\n\t\n\tpublic static class CarEvent implements Comparable<CarEvent>{\n\t\t@JsonProperty(\"lat\")\n\t\tprivate double latitude;\n\t\t@JsonProperty(\"long\")\n\t\tprivate double longitude;\n\t\t@JsonProperty(\"elev\")\n\t\tprivate double elevation;\n\t\t@JsonProperty(\"carid\")\n\t\tprivate String carId;\n\t\t@JsonProperty(\"vin\")\n\t\tprivate String vin;\n\t\tprivate long eventTime;\n\t\tprivate Zone zone;\n\t\t\n\t\tpublic double getLatitude() {\n\t\t\treturn latitude;\n\t\t}\n\t\tpublic void setLatitude(double latitude) {\n\t\t\tthis.latitude = latitude;\n\t\t}\n\t\tpublic double getLongitude() {\n\t\t\treturn longitude;\n\t\t}\n\t\tpublic void setLongitude(double longitude) {\n\t\t\tthis.longitude = longitude;\n\t\t}\n\t\tpublic double getElevation() {\n\t\t\treturn elevation;\n\t\t}\n\t\tpublic void setElevation(double elevation) {\n\t\t\tthis.elevation = elevation;\n\t\t}\n\t\tpublic String getCarId() {\n\t\t\treturn carId;\n\t\t}\n\t\tpublic void setCarId(String carId) {\n\t\t\tthis.carId = carId;\n\t\t}\n\t\tpublic String getVin() {\n\t\t\treturn vin;\n\t\t}\n\t\tpublic void setVin(String vin) {\n\t\t\tthis.vin = vin;\n\t\t}\n\t\tpublic long getEventTime() {\n\t\t\treturn eventTime;\n\t\t}\n\t\tpublic void setEventTime(long eventTime) {\n\t\t\tthis.eventTime = eventTime;\n\t\t}\n\t\tpublic Zone getZone() {\n\t\t\treturn zone;\n\t\t}\n\t\tpublic void setZone(Zone zone) {\n\t\t\tthis.zone = zone;\n\t\t}\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn Objects.hash(carId);\n\t\t}\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tCarEvent other = (CarEvent) obj;\n\t\t\treturn Objects.equals(carId, other.carId) && Objects.equals(vin, other.vin);\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(CarEvent o) {\n\t\t\tint result = carId.compareTo(o.getCarId());\n\t\t\tif (result == 0) {\n\t\t\t\tresult = Long.compare(eventTime, o.getEventTime());\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.format(\"CarEvent [latitude=%s, longitude=%s, elevation=%s, carId=%s, eventTime=%s, zone=%s, vin=%s]\",\n\t\t\t\t\tlatitude, longitude, elevation, carId, eventTime, zone, vin);\n\t\t}\n\t}\n\t\n\tpublic static class Position {\n\t\tprivate double lat;\n\t\tprivate double lng;\n\t\tpublic double getLat() {\n\t\t\treturn lat;\n\t\t}\n\t\tpublic void setLat(double lat) {\n\t\t\tthis.lat = lat;\n\t\t}\n\t\tpublic double getLng() {\n\t\t\treturn lng;\n\t\t}\n\t\tpublic void setLng(double lng) {\n\t\t\tthis.lng = lng;\n\t\t}\n\t}\n\t\n\t@JsonIgnoreProperties(ignoreUnknown = true)\n\tpublic static class Metadata {\n\t\tprivate String name;\n\t\tprivate String resourceVersion;\n\t\tpublic String getName() {\n\t\t\treturn name;\n\t\t}\n\t\tpublic void setName(String name) {\n\t\t\tthis.name = name;\n\t\t}\n\t\tpublic String getResourceVersion() {\n\t\t\treturn resourceVersion;\n\t\t}\n\t\tpublic void setResourceVersion(String resourceVersion) {\n\t\t\tthis.resourceVersion = resourceVersion;\n\t\t}\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn Objects.hash(name, resourceVersion);\n\t\t}\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tMetadata other = (Metadata) obj;\n\t\t\treturn Objects.equals(name, other.name) && Objects.equals(resourceVersion, other.resourceVersion);\n\t\t}\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.format(\"Metadata [name=%s, resourceVersion=%s]\", name, resourceVersion);\n\t\t}\n\t}\n\t\n\t@JsonIgnoreProperties(ignoreUnknown = true)\n\tpublic static class Zone implements Comparable<Zone>{\n\t\tprivate Metadata metadata;\n\t\tprivate ZoneSpec spec;\n\t\tpublic Metadata getMetadata() {\n\t\t\treturn metadata;\n\t\t}\n\t\tpublic void setMetadata(Metadata metaData) {\n\t\t\tthis.metadata = metaData;\n\t\t}\n\t\tpublic ZoneSpec getSpec() {\n\t\t\treturn spec;\n\t\t}\n\t\tpublic void setSpec(ZoneSpec spec) {\n\t\t\tthis.spec = spec;\n\t\t}\n\t\t\n\t\tpublic boolean isInside(double longitude, double latitude) {\n\t\t\treturn distanceTo(longitude, latitude) <= spec.getRadius();\n\t\t}\n\t\t\n\t\tprivate double distanceTo(double longitude, double latitude) {\n\t\t\tdouble lat1 = spec.getPosition().getLat();\n\t\t\tdouble lon1 = spec.getPosition().getLng();\n\t\t\tdouble lat2 = latitude;\n\t\t\tdouble lon2 = longitude;\t\t\t\n\t\t\t\n\t\t\tint R = 6371000; // metres\n\t\t\tdouble phi1 = lat1 * Math.PI/180; // φ, λ in radians\n\t\t\tdouble phi2 = lat2 * Math.PI/180;\n\t\t\tdouble deltaPhi = (lat2-lat1) * Math.PI/180;\n\t\t\tdouble deltaLambda = (lon2-lon1) * Math.PI/180;\n\n\t\t\tdouble a = Math.sin(deltaPhi/2) * Math.sin(deltaPhi/2) +\n\t\t\t          Math.cos(phi1) * Math.cos(phi2) *\n\t\t\t          Math.sin(deltaLambda/2) * Math.sin(deltaLambda/2);\n\t\t\tdouble c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n\t\t\treturn R * c; // in metres\n\t\t\t\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Zone o) {\n\t\t\treturn Integer.compare(this.getSpec().getPriority(), o.getSpec().getPriority());\n\t\t}\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn Objects.hash(metadata);\n\t\t}\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tZone other = (Zone) obj;\n\t\t\treturn Objects.equals(metadata, other.metadata);\n\t\t}\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.format(\"Zone [metadata=%s, spec=%s]\", metadata, spec);\n\t\t}\n\t}\n\t\n\t@JsonIgnoreProperties(ignoreUnknown = true)\n\tpublic static class ZoneSpec {\n\t\tprivate String name;\n\t\tprivate Position position;\n\t\tprivate int priority;\n\t\tprivate int radius;\n\t\tprivate String type;\n\t\t\n\t\tpublic String getName() {\n\t\t\treturn name;\n\t\t}\n\t\tpublic void setName(String name) {\n\t\t\tthis.name = name;\n\t\t}\n\t\tpublic Position getPosition() {\n\t\t\treturn position;\n\t\t}\n\t\tpublic void setPosition(Position position) {\n\t\t\tthis.position = position;\n\t\t}\n\t\tpublic int getPriority() {\n\t\t\treturn priority;\n\t\t}\n\t\tpublic void setPriority(int priority) {\n\t\t\tthis.priority = priority;\n\t\t}\n\t\tpublic int getRadius() {\n\t\t\treturn radius;\n\t\t}\n\t\tpublic void setRadius(int radius) {\n\t\t\tthis.radius = radius;\n\t\t}\n\t\tpublic String getType() {\n\t\t\treturn type;\n\t\t}\n\t\tpublic void setType(String type) {\n\t\t\tthis.type = type;\n\t\t}\n\t\t@Override\n\t\tpublic int hashCode() {\n\t\t\treturn Objects.hash(name, position, priority, radius, type);\n\t\t}\n\t\t@Override\n\t\tpublic boolean equals(Object obj) {\n\t\t\tif (this == obj)\n\t\t\t\treturn true;\n\t\t\tif (obj == null)\n\t\t\t\treturn false;\n\t\t\tif (getClass() != obj.getClass())\n\t\t\t\treturn false;\n\t\t\tZoneSpec other = (ZoneSpec) obj;\n\t\t\treturn Objects.equals(name, other.name) && Objects.equals(position, other.position)\n\t\t\t\t\t&& priority == other.priority && radius == other.radius && Objects.equals(type, other.type);\n\t\t}\n\t\t@Override\n\t\tpublic String toString() {\n\t\t\treturn String.format(\"ZoneSpec [name=%s, position=%s, priority=%s, radius=%s, type=%s]\", name, position,\n\t\t\t\t\tpriority, radius, type);\n\t\t}\n\t}\n\t\n\t@Override\n\tpublic void configure() throws Exception {\n\t\tConfiguration cacheConfig = createCacheConfig();\n\t\tinitRemoteCache(cacheConfig);\n\t\tbindToRegistry(\"cacheContainerConfiguration\", cacheConfig);\n\n\t\trestConfiguration().host(\"0.0.0.0\").port(9080).component(\"netty-http\")\n\t\t\t.bindingMode(RestBindingMode.json)\n\t\t\t.dataFormatProperty(\"prettyPrint\", \"true\")\n\t\t\t.contextPath(\"/\");\n\n\t\t///mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n\n\t\tstoreZonesInCacheRoute();\n\t\tstoreCarEventsInCacheRoute();\n\t\tclearCacheEndpoint();\n\n\t\tif (aggregationInterval > 0) {\n\t\t\tstoreAggregatedSnaphotOfCarEventsInCacheRouteJson();\n\t\t}\n\t}\n\n\tprivate void clearCacheEndpoint() {\n\t\tfrom(\"rest:get:clearCache\").routeId(\"clearCacheEndpoint\")\n\t\t\t\t.setHeader(\"Access-Control-Allow-Origin\",constant(\"*\"))\n\t\t\t\t.process(ex -> {\n\t\t\t\t\tzonesCache.clear();\n\t\t\t\t\tcarsCache.clear();\n\t\t\t\t\tcarsnapshotsCache.clear();\n\t\t\t\t})\n\t\t\t\t.log(\"Cleared all caches\");\n\t}\n\n\tprivate void storeAggregatedSnaphotOfCarEventsInCacheRouteJson() {\n\t\tfrom(\"kafka:{{com.redhat.bobbycar.camelk.kafka.topic}}?clientId=kafkaToDatagridAggregatorCamelClient&brokers={{com.redhat.bobbycar.camelk.kafka.brokers}}\").routeId(\"storeAggregatedSnaphotOfCarEventsInCacheRouteJson\")\n\t\t\t//.unmarshal().json(JsonLibrary.Jackson, CarEvent.class)\n\t\t\t.process(ex -> \n\t\t\t\tex.getIn().setBody(mapper.readValue(ex.getIn().getBody(String.class), CarEvent.class))\n\t\t\t)\n\t\t\t.aggregate(simple(\"true\"), new GroupedBodyAggregationStrategy())\n\t\t\t.completionInterval(aggregationInterval).id(\"myAggregator\")\n\t\t\t.aggregateController(new DefaultAggregateController())\n\t\t\t.process(ex -> {\n\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\tList<CarEvent> aggregation = ex.getIn().getBody(List.class);\n\t\t\t\tStream<CarEvent> aggStream = aggregation.stream().sorted();\n\t\t\t\tif (aggregationDistinct) {\n\t\t\t\t\taggStream = aggStream.distinct();\n\t\t\t\t}\n\t\t\t\tex.getIn().setBody(\"[\" + aggStream\n\t\t\t\t\t\t.map(c -> {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\treturn mapper.writeValueAsString(c);\n\t\t\t\t\t\t\t} catch (JsonProcessingException e) {\n\t\t\t\t\t\t\t\tLOGGER.error(\"Error writing json as string\", e);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}).collect(Collectors.joining(\",\")) + \"]\");\n\t\t\t})\n\t\t\t.log(\"Aggregated for the given interval: ${body}\")\n\t\t\t.setHeader(InfinispanConstants.OPERATION).constant(InfinispanOperation.PUT)\n\t\t\t.setHeader(InfinispanConstants.KEY).expression(simple(\"aggregated\"))\n\t\t    .setHeader(InfinispanConstants.VALUE).expression(simple(\"${body}\"))\n\t\t\t.to(\"infinispan://{{com.redhat.bobbycar.camelk.dg.car.snapshot.cacheName}}?cacheContainerConfiguration=#cacheContainerConfiguration\");\n\t}\n\t\n\tprivate void storeZonesInCacheRoute() throws IOException {\n\t\t// restConfiguration().component(\"netty-http\").host(\"https://\"+ocpAPIHost).port(6443).bindingMode(RestBindingMode.json);\n\t\tbindToRegistry(\"sslConfiguration\", configureSslForApiAccess());\n\t\tString token = retrieveServiceAccountToken();\n\t\tfrom(\"scheduler://foo?delay={{com.redhat.bobbycar.camelk.dg.refresh.interval}}\").routeId(\"storeZonesInCache\")\n\t\t\t.process(ex -> {\n\t\t\t\tzonesCache.clear();\n\t\t\t})\n\t\t\t.setHeader(\"Authorization\").constant(\"Bearer \" + token)\n\t\t\t.setHeader(Exchange.HTTP_METHOD, constant(\"GET\"))\n\t\t\t.setHeader(\"Connection\", constant(\"Keep-Alive\"))\n\t\t\t.setHeader(Exchange.CONTENT_TYPE, constant(\"application/json\"))\n\t\t\t.to(\"netty-http:https://\" + ocpAPIHost + \":6443/apis/bobbycar.redhat.com/v1alpha1/namespaces/\" + namespace + \"/bobbycarzones?sslContextParameters=#sslConfiguration&keepAlive=true\")\n\t\t\t//.log(\"Response was ${body}\")\n\t\t\t\t.process(exchange -> {\n\t\t\t\t\tNettyHttpMessage msg = exchange.getIn(NettyHttpMessage.class);\n\t\t\t\t\tString payload = msg.getBody(String.class);\n\t\t\t\t\tString zonesData = payload.substring(payload.indexOf(\"\\\"items\\\":[\")+8, payload.indexOf(\",\\\"kind\\\":\\\"BobbycarZoneList\\\"\"));\n\t\t\t\t\texchange.getIn().setBody(zonesData);\n\t\t\t\t})\n\t\t\t.split().jsonpathWriteAsString(\"$\")\n\t\t\t//.log(\"Item is ${body} of type ${body.class}\")\n\t\t\t.setHeader(InfinispanConstants.KEY).expression(jsonpath(\"$.metadata.name\", String.class))\n\t\t\t.setHeader(InfinispanConstants.VALUE).expression(simple(\"${body}\"))\n\t\t\t.log(\"Saving data to cache with value: ${headers[CamelInfinispanValue]}\")\n\t\t\t.to(\"infinispan://{{com.redhat.bobbycar.camelk.dg.zone.cacheName}}?cacheContainerConfiguration=#cacheContainerConfiguration\");\n\t}\n\n\tprivate String retrieveServiceAccountToken() throws IOException {\n\t\tPath filePath = Paths.get(\"/var/run/secrets/kubernetes.io/serviceaccount/token\");\n\t\treturn new String(Files.readAllBytes(filePath));\n\t}\n\n\tprivate void storeCarEventsInCacheRoute() {\n\t\t// clear the cars cache before starting the route\n\t\tcarsCache.clear();\n\n\t\tfrom(\"kafka:{{com.redhat.bobbycar.camelk.kafka.topic}}?clientId=kafkaToDatagridCamelClient&brokers={{com.redhat.bobbycar.camelk.kafka.brokers}}\").routeId(\"storeCarEventsInCache\")\n\t\t\t.log(\"Received ${body} from Kafka\")\n\t\t\t.setHeader(InfinispanConstants.OPERATION).constant(InfinispanOperation.PUT)\n\t\t\t.setHeader(InfinispanConstants.KEY).expression(jsonpath(\"$.carid\"))\n\t\t\t//.unmarshal().json(JsonLibrary.Jackson, CarEvent.class)\n\t\t\t.process(ex -> \n\t\t\t\tex.getIn().setBody(mapper.readValue(ex.getIn().getBody(String.class), CarEvent.class))\n\t\t\t)\n\t\t\t.log(\"Received ${body} from  ${body.class}\")\n\t\t    .process(this::processZoneData)\n\t\t    //.marshal().json(JsonLibrary.Jackson, String.class)\n\t\t    .process(ex -> \n\t\t\t\tex.getIn().setBody(mapper.writeValueAsString(ex.getIn().getBody(CarEvent.class)))\n\t\t\t)\n\t\t    .setHeader(InfinispanConstants.VALUE).expression(simple(\"${body}\"))\n\t\t    .setHeader(InfinispanConstants.RESULT_HEADER).expression(simple(\"dummyAvoidOverwritingBody\"))\n\t\t    .log(\"Saving data to cache with key: ${headers[CamelInfinispanKey]} and value: ${body} of type  ${body.class}\")\n\t\t\t.to(\"infinispan://{{com.redhat.bobbycar.camelk.dg.car.cacheName}}?cacheContainerConfiguration=#cacheContainerConfiguration\")\n\t\t\t.choice()\n\t\t\t\t.when(header(ZONE_CHANGE_HEADER).isEqualTo(true))\n\t\t\t\t.process(this::transformToZoneChangeEvent)\n\t\t\t\t//.marshal().json(JsonLibrary.Jackson, String.class)\n\t\t\t\t.process(ex -> \n\t\t\t\t\tex.getIn().setBody(mapper.writeValueAsString(ex.getIn().getBody(ZoneChangeEvent.class)))\n\t\t\t\t)\n\t\t\t\t.log(\"Publishing ${body} to mqtt\")\n\t\t\t\t.to(\"paho:{{com.redhat.bobbycar.camelk.mqtt.topic}}?brokerUrl={{com.redhat.bobbycar.camelk.mqtt.brokerUrl}}\")\n\t\t\t;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tprivate void transformToZoneChangeEvent(Exchange ex) {\t\n\t\tOptional<Zone> previousZone = (Optional<Zone>) ex.getIn().getHeader(ZONE_PREV_HEADER);\n\t\tOptional<Zone> nextZone = (Optional<Zone>) ex.getIn().getHeader(ZONE_NXT_HEADER);\n\t\tString carId = (String) ex.getIn().getHeader(CAR_ID_HEADER);\n\t\tString vin = (String) ex.getIn().getHeader(VIN_HEADER);\n\t\tex.getIn().setBody(new ZoneChangeEvent(previousZone.map(z -> z.getMetadata().getName()).orElse(null), \n\t\t\t\tnextZone.map(z -> z.getMetadata().getName()).orElse(null), carId, vin));\n\t}\n\n\tprivate void processZoneData(Exchange ex) {\n\t\tCarEvent car = ex.getIn().getBody(CarEvent.class);\n\t\tdouble lat = car.getLatitude();\n\t\tdouble lng = car.getLongitude();\n\t\tex.getIn().setHeader(CAR_ID_HEADER, car.getCarId());\n\t\tex.getIn().setHeader(VIN_HEADER, car.getVin());\n\t\tOptional<Zone> matchingZone = zonesCache.values().stream()\n\t\t\t.map(zs -> {\n\t\t\t\ttry {\n\t\t\t\t\treturn mapper.readValue(zs, Zone.class);\n\t\t\t\t} catch (JsonProcessingException e) {\n\t\t\t\t\tLOGGER.error(\"Error marshalling zone\", e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.filter(z -> z.isInside(lng, lat))\n\t\t\t.sorted()\n\t\t\t.findFirst();\n\t\tOptional<Zone> previousZone = getPreviousZoneFromCache(car.carId);\n\t\tif (!previousZone.equals(matchingZone)) {\n\t\t\tLOGGER.error(\"Zone changed from {} to {}\", previousZone, matchingZone);\n\t\t\tex.getIn().setHeader(ZONE_CHANGE_HEADER, true);\n\t\t\tex.getIn().setHeader(ZONE_PREV_HEADER, previousZone);\n\t\t\tex.getIn().setHeader(ZONE_NXT_HEADER, matchingZone);\n\t\t}\n\t\tcar.setZone(matchingZone.orElse(null));\n\t}\n\t\n\tprivate Optional<Zone> getPreviousZoneFromCache(String carId) {\n\t\ttry {\n\t\t\tif (carsCache.containsKey(carId)) {\n\t\t\t\tCarEvent carEventFromCache = mapper.readValue(carsCache.get(carId), CarEvent.class);\n\t\t\t\treturn Optional.ofNullable(carEventFromCache.getZone());\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Optional.empty();\n\t\t\t}\n\t\t} catch (JsonProcessingException e) {\n\t\t\tLOGGER.error(\"Error marshalling carevent\", e);\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n\n\tprivate void initRemoteCache(Configuration cacheConfig) {\n\t\tcacheManager = new RemoteCacheManager(cacheConfig);\n\t\tcacheManager.start();\n\t\tzonesCache = cacheManager.administration().getOrCreateCache(zonesCacheName, CACHE_TEMPLATE);\n\t\tcarsCache = cacheManager.administration().getOrCreateCache(carsCacheName, CACHE_TEMPLATE);\n\t\tcarsnapshotsCache = cacheManager.administration().getOrCreateCache(carsnapshotCacheName, CACHE_TEMPLATE);\n\t}\n\t\n\tprivate Configuration createCacheConfig() {\n\t\tConfigurationBuilder hotRodBuilder = new ConfigurationBuilder();\n\t\treturn hotRodBuilder.addServer()\n\t        .host(datagridHost).port(11222)\n\t        \t.marshaller(new StringMarshaller(Charset.defaultCharset()))\n\t        .clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE)\n\t        \t.security()\n\t        \t\t//.authentication().enable()\n\t        \t\t//.username(datagridUsername)\n\t        \t\t//.password(datagridPassword)\n\t        \t\t//.serverName(\"infinispan\")\n\t        \t\t//.saslQop(SaslQop.AUTH)\n\t        \t\t//.saslMechanism(\"DIGEST-MD5\")\n\t\t\t\t.ssl()\n\t\t\t\t\t.sniHostName(datagridHost)\n\t\t\t\t\t.trustStoreFileName(PATH_TO_SERVICE_CA)\n\t\t\t\t\t.trustStoreType(\"pem\")\n        .build();\n\t}\n\t\n\tprivate SSLContextParameters configureSslForApiAccess() {\n\t\tSSLContextParameters params = new SSLContextParameters();\n\t\tparams.setCamelContext(getContext());\n\t\tSSLContextClientParameters clientParameters = new SSLContextClientParameters();\n\t\tclientParameters.setSniHostName(ocpAPIHost);\n\t\tFilterParameters cipherSuitesFilter = new FilterParameters();\n\t\tcipherSuitesFilter.getInclude().add(\".*\");\n\t\tclientParameters.setCipherSuitesFilter(cipherSuitesFilter);\n\t\tparams.setClientParameters(clientParameters);\n\t\tTrustManagersParameters trustManagers = new TrustManagersParameters();\n\t\ttrustManagers.setTrustManager(new X509TrustManager() {\n\t\t\t\n\t\t\tprivate X509Certificate apiServerCert;\n\t\t\t{\n\t\t\t\tCertificateFactory fact;\n\t\t\t\ttry {\n\t\t\t\t\tfact = CertificateFactory.getInstance(\"X.509\");\n\t\t\t\t\tFileInputStream is = new FileInputStream (new File(PATH_TO_SERVICE_CA));\n\t\t\t\t\tapiServerCert = (X509Certificate) fact.generateCertificate(is);\n\t\t\t\t} catch (CertificateException | FileNotFoundException e) {\n\t\t\t\t\tLOGGER.error(\"Error loading certificate\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic X509Certificate[] getAcceptedIssuers() {\n\t\t\t\t// Allow all certs\n\t\t\t\treturn new X509Certificate[0];\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n\t\t\t\t// Allow all certs\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n\t\t\t\t// Allow all certs\n\t\t\t}\n\t\t});\n\t\tparams.setTrustManagers(trustManagers);\n\t\treturn params;\n\t}\n\t\n\t@Override\n\tpublic OnCompletionDefinition onCompletion() {\n\t\tcacheManager.close();\n\t\treturn super.onCompletion();\n\t}\n}\n"
      name: KafkaToDatagridRoute.java
  traits:
    service:
      configuration:
        enabled: false
---
# Source: bobbycar-core-apps/templates/mqtt2kafka-integration.yaml
apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: mqtt2kafka
spec:
  configuration:
    - type: secret
      value: mqtt2kafka
  profile: OpenShift
  sources:
    - content: "package com.redhat.bobbycar.routes;\n\nimport java.nio.charset.Charset;\nimport java.util.stream.Collectors;\n\nimport org.apache.camel.PropertyInject;\nimport org.apache.camel.builder.RouteBuilder;\nimport org.apache.camel.component.kafka.KafkaConstants;\n\npublic class MqttToKafka extends RouteBuilder {\n\t\n\t@Override\n\tpublic void configure() throws Exception {\n\n\t\tfrom(\"paho:{{com.redhat.bobbycar.camelk.mqtt.topic}}?brokerUrl={{com.redhat.bobbycar.camelk.mqtt.brokerUrl}}\")\n\t\t\t.log(\"Publishing engine metric ${body} to Kafka\")\n\t\t\t.setHeader(KafkaConstants.KEY).expression(jsonpath(\"$.driverId\"))\n\t\t\t//.log(\"Publishing engine metric ${headers} to Kafka\")\n\t\t.to(\"kafka:{{com.redhat.bobbycar.camelk.kafka.topic}}?clientId=mqtt2kafkaClientEM&brokers={{com.redhat.bobbycar.camelk.kafka.brokers}}\");\n\n\t\tfrom(\"paho:{{com.redhat.bobbycar.camelk.mqtt.topicZoneChange}}?brokerUrl={{com.redhat.bobbycar.camelk.mqtt.brokerUrl}}\")\n\t\t\t.log(\"Publishing zone change ${body} to Kafka\")\n\t\t.to(\"kafka:{{com.redhat.bobbycar.camelk.kafka.topicZoneChange}}?clientId=mqtt2kafkaClientZC&brokers={{com.redhat.bobbycar.camelk.kafka.brokers}}\");\n\t\n\t}\t\n\t\n}\n"
      name: MqttToKafka.java
  traits:
    service:
      configuration:
        enabled: false
---
# Source: bobbycar-core-apps/templates/cacheService-route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: cache-service
  labels:
    camel.apache.org/integration: cache-service
spec:
  host: cache-service-test.test.cluster.domain.com
  to:
    kind: Service
    name: cache-service
    weight: 100
  port:
    targetPort: http
  wildcardPolicy: None
---
# Source: bobbycar-core-apps/templates/car-simulator-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: car-simulator
  annotations:
    haproxy.router.openshift.io/timeout: 10000ms
  name: car-simulator
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: car-simulator
    weight: 100
  wildcardPolicy: None
---
# Source: bobbycar-core-apps/templates/dashboard-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: dashboard
  name: dashboard
  namespace: test
spec:
  host: dashboard-test.test.cluster.domain.com
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: dashboard
    weight: 100
  wildcardPolicy: None
---
# Source: bobbycar-core-apps/templates/dashboard-streaming-route.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: dashboard-streaming
spec:
  host: dashboard-streaming-test.test.cluster.domain.com
  to:
    kind: Service
    name: dashboard-streaming
    weight: 100
  port:
    targetPort: 8080
  wildcardPolicy: None
